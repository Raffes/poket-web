{"ast":null,"code":"import firebase from '@firebase/app';\nimport { __extends, __spreadArray, __awaiter, __generator, __assign } from 'tslib';\nimport { FirebaseError, createMockUserToken, getModularInstance } from '@firebase/util';\nimport { Component } from '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\n\n/**\r\n * Domain name for firebase storage.\r\n */\n\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\n\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\n\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\n\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n/**\r\n * An error returned by the Firebase Storage SDK.\r\n * @public\r\n */\n\nvar FirebaseStorageError = function (_super) {\n  __extends(FirebaseStorageError, _super);\n  /**\r\n   * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\r\n   *  added to the end of the message.\r\n   * @param message  - Error message.\r\n   */\n\n\n  function FirebaseStorageError(code, message) {\n    var _this = _super.call(this, prependCode(code), \"Firebase Storage: \" + message + \" (\" + prependCode(code) + \")\") || this;\n    /**\r\n     * Stores custom error data unque to FirebaseStorageError.\r\n     */\n\n\n    _this.customData = {\n      serverResponse: null\n    };\n    _this._baseMessage = _this.message; // Without this, `instanceof FirebaseStorageError`, in tests for example,\n    // returns false.\n\n    Object.setPrototypeOf(_this, FirebaseStorageError.prototype);\n    return _this;\n  }\n  /**\r\n   * Compares a StorageErrorCode against this error's code, filtering out the prefix.\r\n   */\n\n\n  FirebaseStorageError.prototype._codeEquals = function (code) {\n    return prependCode(code) === this.code;\n  };\n\n  Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\n    /**\r\n     * Optional response message that was added by the server.\r\n     */\n    get: function () {\n      return this.customData.serverResponse;\n    },\n    set: function (serverResponse) {\n      this.customData.serverResponse = serverResponse;\n\n      if (this.customData.serverResponse) {\n        this.message = this._baseMessage + \"\\n\" + this.customData.serverResponse;\n      } else {\n        this.message = this._baseMessage;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return FirebaseStorageError;\n}(FirebaseError);\n\nfunction prependCode(code) {\n  return 'storage/' + code;\n}\n\nfunction unknown() {\n  var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n  return new FirebaseStorageError(\"unknown\"\n  /* UNKNOWN */\n  , message);\n}\n\nfunction objectNotFound(path) {\n  return new FirebaseStorageError(\"object-not-found\"\n  /* OBJECT_NOT_FOUND */\n  , \"Object '\" + path + \"' does not exist.\");\n}\n\nfunction quotaExceeded(bucket) {\n  return new FirebaseStorageError(\"quota-exceeded\"\n  /* QUOTA_EXCEEDED */\n  , \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\n\nfunction unauthenticated() {\n  var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n  return new FirebaseStorageError(\"unauthenticated\"\n  /* UNAUTHENTICATED */\n  , message);\n}\n\nfunction unauthorizedApp() {\n  return new FirebaseStorageError(\"unauthorized-app\"\n  /* UNAUTHORIZED_APP */\n  , 'This app does not have permission to access Firebase Storage on this project.');\n}\n\nfunction unauthorized(path) {\n  return new FirebaseStorageError(\"unauthorized\"\n  /* UNAUTHORIZED */\n  , \"User does not have permission to access '\" + path + \"'.\");\n}\n\nfunction retryLimitExceeded() {\n  return new FirebaseStorageError(\"retry-limit-exceeded\"\n  /* RETRY_LIMIT_EXCEEDED */\n  , 'Max retry time for operation exceeded, please try again.');\n}\n\nfunction canceled() {\n  return new FirebaseStorageError(\"canceled\"\n  /* CANCELED */\n  , 'User canceled the upload/download.');\n}\n\nfunction invalidUrl(url) {\n  return new FirebaseStorageError(\"invalid-url\"\n  /* INVALID_URL */\n  , \"Invalid URL '\" + url + \"'.\");\n}\n\nfunction invalidDefaultBucket(bucket) {\n  return new FirebaseStorageError(\"invalid-default-bucket\"\n  /* INVALID_DEFAULT_BUCKET */\n  , \"Invalid default bucket '\" + bucket + \"'.\");\n}\n\nfunction noDefaultBucket() {\n  return new FirebaseStorageError(\"no-default-bucket\"\n  /* NO_DEFAULT_BUCKET */\n  , 'No default bucket ' + \"found. Did you set the '\" + CONFIG_STORAGE_BUCKET_KEY + \"' property when initializing the app?\");\n}\n\nfunction cannotSliceBlob() {\n  return new FirebaseStorageError(\"cannot-slice-blob\"\n  /* CANNOT_SLICE_BLOB */\n  , 'Cannot slice blob for upload. Please retry the upload.');\n}\n\nfunction serverFileWrongSize() {\n  return new FirebaseStorageError(\"server-file-wrong-size\"\n  /* SERVER_FILE_WRONG_SIZE */\n  , 'Server recorded incorrect upload file size, please retry the upload.');\n}\n\nfunction noDownloadURL() {\n  return new FirebaseStorageError(\"no-download-url\"\n  /* NO_DOWNLOAD_URL */\n  , 'The given file does not have any download URLs.');\n}\n\nfunction invalidArgument(message) {\n  return new FirebaseStorageError(\"invalid-argument\"\n  /* INVALID_ARGUMENT */\n  , message);\n}\n\nfunction appDeleted() {\n  return new FirebaseStorageError(\"app-deleted\"\n  /* APP_DELETED */\n  , 'The Firebase app was deleted.');\n}\n/**\r\n * @param name - The name of the operation that was invalid.\r\n */\n\n\nfunction invalidRootOperation(name) {\n  return new FirebaseStorageError(\"invalid-root-operation\"\n  /* INVALID_ROOT_OPERATION */\n  , \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\n\n\nfunction invalidFormat(format, message) {\n  return new FirebaseStorageError(\"invalid-format\"\n  /* INVALID_FORMAT */\n  , \"String does not match format '\" + format + \"': \" + message);\n}\n/**\r\n * @param message - A message describing the internal error.\r\n */\n\n\nfunction internalError(message) {\n  throw new FirebaseStorageError(\"internal-error\"\n  /* INTERNAL_ERROR */\n  , 'Internal error: ' + message);\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** Converts a Base64 encoded string to a binary string. */\n\n\nfunction decodeBase64(encoded) {\n  return atob(encoded);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An enumeration of the possible string formats for upload.\r\n * @public\r\n */\n\n\nvar StringFormat = {\n  /**\r\n   * Indicates the string should be interpreted \"raw\", that is, as normal text.\r\n   * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\r\n   * sequence.\r\n   * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\r\n   * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\r\n   */\n  RAW: 'raw',\n\n  /**\r\n   * Indicates the string should be interpreted as base64-encoded data.\r\n   * Padding characters (trailing '='s) are optional.\r\n   * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\r\n   * ad 69 8e fb e1 3a b7 bf eb 97\r\n   */\n  BASE64: 'base64',\n\n  /**\r\n   * Indicates the string should be interpreted as base64url-encoded data.\r\n   * Padding characters (trailing '='s) are optional.\r\n   * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\r\n   * ad 69 8e fb e1 3a b7 bf eb 97\r\n   */\n  BASE64URL: 'base64url',\n\n  /**\r\n   * Indicates the string is a data URL, such as one obtained from\r\n   * canvas.toDataURL().\r\n   * Example: the string 'data:application/octet-stream;base64,aaaa'\r\n   * becomes the byte sequence\r\n   * 69 a6 9a\r\n   * (the content-type \"application/octet-stream\" is also applied, but can\r\n   * be overridden in the metadata object).\r\n   */\n  DATA_URL: 'data_url'\n};\n\nvar StringData = function () {\n  function StringData(data, contentType) {\n    this.data = data;\n    this.contentType = contentType || null;\n  }\n\n  return StringData;\n}();\n\nfunction dataFromString(format, stringData) {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\n    // do nothing\n  } // assert(false);\n\n\n  throw unknown();\n}\n\nfunction utf8Bytes_(value) {\n  var b = [];\n\n  for (var i = 0; i < value.length; i++) {\n    var c = value.charCodeAt(i);\n\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | c >> 6, 128 | c & 63);\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            var hi = c;\n            var lo = value.charCodeAt(++i);\n            c = 65536 | (hi & 1023) << 10 | lo & 1023;\n            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        }\n      }\n    }\n  }\n\n  return new Uint8Array(b);\n}\n\nfunction percentEncodedBytes_(value) {\n  var decoded;\n\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n\n  return utf8Bytes_(decoded);\n}\n\nfunction base64Bytes_(format, value) {\n  switch (format) {\n    case StringFormat.BASE64:\n      {\n        var hasMinus = value.indexOf('-') !== -1;\n        var hasUnder = value.indexOf('_') !== -1;\n\n        if (hasMinus || hasUnder) {\n          var invalidChar = hasMinus ? '-' : '_';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n        }\n\n        break;\n      }\n\n    case StringFormat.BASE64URL:\n      {\n        var hasPlus = value.indexOf('+') !== -1;\n        var hasSlash = value.indexOf('/') !== -1;\n\n        if (hasPlus || hasSlash) {\n          var invalidChar = hasPlus ? '+' : '/';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\n        }\n\n        value = value.replace(/-/g, '+').replace(/_/g, '/');\n        break;\n      }\n    // do nothing\n  }\n\n  var bytes;\n\n  try {\n    bytes = decodeBase64(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n\n  var array = new Uint8Array(bytes.length);\n\n  for (var i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar DataURLParts = function () {\n  function DataURLParts(dataURL) {\n    this.base64 = false;\n    this.contentType = null;\n    var matches = dataURL.match(/^data:([^,]+)?,/);\n\n    if (matches === null) {\n      throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n    }\n\n    var middle = matches[1] || null;\n\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n    }\n\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n\n  return DataURLParts;\n}();\n\nfunction dataURLBytes_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nfunction dataURLContentType_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s, end) {\n  var longEnough = s.length >= end.length;\n\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An event that is triggered on a task.\r\n */\n\n\nvar TaskEvent = {\n  /**\r\n   * For this event,\r\n   * <ul>\r\n   *   <li>The `next` function is triggered on progress updates and when the\r\n   *       task is paused/resumed with an `UploadTaskSnapshot` as the first\r\n   *       argument.</li>\r\n   *   <li>The `error` function is triggered if the upload is canceled or fails\r\n   *       for another reason.</li>\r\n   *   <li>The `complete` function is triggered if the upload completes\r\n   *       successfully.</li>\r\n   * </ul>\r\n   */\n  STATE_CHANGED: 'state_changed'\n};\n/**\r\n * Represents the current state of a running upload.\r\n */\n\nvar TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nfunction taskStateFromInternalTaskState(state) {\n  switch (state) {\n    case \"running\"\n    /* RUNNING */\n    :\n    case \"pausing\"\n    /* PAUSING */\n    :\n    case \"canceling\"\n    /* CANCELING */\n    :\n      return TaskState.RUNNING;\n\n    case \"paused\"\n    /* PAUSED */\n    :\n      return TaskState.PAUSED;\n\n    case \"success\"\n    /* SUCCESS */\n    :\n      return TaskState.SUCCESS;\n\n    case \"canceled\"\n    /* CANCELED */\n    :\n      return TaskState.CANCELED;\n\n    case \"error\"\n    /* ERROR */\n    :\n      return TaskState.ERROR;\n\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Error codes for requests made by the the XhrIo wrapper.\r\n */\n\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n  ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (ErrorCode = {}));\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\r\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\r\n */\n\n\nvar XhrConnection = function () {\n  function XhrConnection() {\n    var _this = this;\n\n    this.sent_ = false;\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(function (resolve) {\n      _this.xhr_.addEventListener('abort', function () {\n        _this.errorCode_ = ErrorCode.ABORT;\n        resolve();\n      });\n\n      _this.xhr_.addEventListener('error', function () {\n        _this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve();\n      });\n\n      _this.xhr_.addEventListener('load', function () {\n        resolve();\n      });\n    });\n  }\n  /**\r\n   * @override\r\n   */\n\n\n  XhrConnection.prototype.send = function (url, method, body, headers) {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n\n    if (headers !== undefined) {\n      for (var key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n\n    if (body !== undefined) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n\n    return this.sendPromise_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  XhrConnection.prototype.getErrorCode = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n\n    return this.errorCode_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  XhrConnection.prototype.getStatus = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  XhrConnection.prototype.getResponseText = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n\n    return this.xhr_.responseText;\n  };\n  /**\r\n   * Aborts the request.\r\n   * @override\r\n   */\n\n\n  XhrConnection.prototype.abort = function () {\n    this.xhr_.abort();\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  XhrConnection.prototype.getResponseHeader = function (header) {\n    return this.xhr_.getResponseHeader(header);\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  XhrConnection.prototype.addUploadProgressListener = function (listener) {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  XhrConnection.prototype.removeUploadProgressListener = function (listener) {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  };\n\n  return XhrConnection;\n}();\n\nfunction newConnection() {\n  return new XhrConnection();\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\n\n\nvar ConnectionPool = function () {\n  function ConnectionPool() {}\n\n  ConnectionPool.prototype.createConnection = function () {\n    return newConnection();\n  };\n\n  return ConnectionPool;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Firebase Storage location data.\r\n *\r\n * @internal\r\n */\n\n\nvar Location = function () {\n  function Location(bucket, path) {\n    this.bucket = bucket;\n    this.path_ = path;\n  }\n\n  Object.defineProperty(Location.prototype, \"path\", {\n    get: function () {\n      return this.path_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Location.prototype, \"isRoot\", {\n    get: function () {\n      return this.path.length === 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Location.prototype.fullServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  };\n\n  Location.prototype.bucketOnlyServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  };\n\n  Location.makeFromBucketSpec = function (bucketString, host) {\n    var bucketLocation;\n\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString, host);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  };\n\n  Location.makeFromUrl = function (url, host) {\n    var location = null;\n    var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n\n    var gsPath = '(/(.*))?$';\n    var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    var gsIndices = {\n      bucket: 1,\n      path: 3\n    };\n\n    function httpModify(loc) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n\n    var version = 'v[A-Za-z0-9_]+';\n    var firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\n    var firebaseStoragePath = '(/([^?#]*).*)?$';\n    var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\n    var firebaseStorageIndices = {\n      bucket: 1,\n      path: 3\n    };\n    var cloudStorageHost = host === DEFAULT_HOST ? '(?:storage.googleapis.com|storage.cloud.google.com)' : host;\n    var cloudStoragePath = '([^?#]*)';\n    var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\n    var cloudStorageIndices = {\n      bucket: 1,\n      path: 2\n    };\n    var groups = [{\n      regex: gsRegex,\n      indices: gsIndices,\n      postModify: gsModify\n    }, {\n      regex: firebaseStorageRegExp,\n      indices: firebaseStorageIndices,\n      postModify: httpModify\n    }, {\n      regex: cloudStorageRegExp,\n      indices: cloudStorageIndices,\n      postModify: httpModify\n    }];\n\n    for (var i = 0; i < groups.length; i++) {\n      var group = groups[i];\n      var captures = group.regex.exec(url);\n\n      if (captures) {\n        var bucketValue = captures[group.indices.bucket];\n        var pathValue = captures[group.indices.path];\n\n        if (!pathValue) {\n          pathValue = '';\n        }\n\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n\n    return location;\n  };\n\n  return Location;\n}();\n/**\r\n * A request whose promise always fails.\r\n */\n\n\nvar FailRequest = function () {\n  function FailRequest(error) {\n    this.promise_ = Promise.reject(error);\n  }\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.cancel = function (_appDelete) {};\n\n  return FailRequest;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\n\n\nfunction start(f, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ncallback, timeout) {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  var waitSeconds = 1; // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var timeoutId = null;\n  var hitTimeout = false;\n  var cancelState = 0;\n\n  function canceled() {\n    return cancelState === 2;\n  }\n\n  var triggeredCallback = false;\n\n  function triggerCallback() {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis) {\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  function handler(success) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (success) {\n      triggerCallback.call.apply(triggerCallback, __spreadArray([null, success], args));\n      return;\n    }\n\n    var mustStop = canceled() || hitTimeout;\n\n    if (mustStop) {\n      triggerCallback.call.apply(triggerCallback, __spreadArray([null, success], args));\n      return;\n    }\n\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n\n    var waitMillis;\n\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n\n    callWithDelay(waitMillis);\n  }\n\n  var stopped = false;\n\n  function stop(wasTimeout) {\n    if (stopped) {\n      return;\n    }\n\n    stopped = true;\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n\n  callWithDelay(0);\n  setTimeout(function () {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\n\n\nfunction stop(id) {\n  id(false);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isJustDef(p) {\n  return p !== void 0;\n} // eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction isFunction(p) {\n  return typeof p === 'function';\n}\n\nfunction isNonArrayObject(p) {\n  return typeof p === 'object' && !Array.isArray(p);\n}\n\nfunction isString(p) {\n  return typeof p === 'string' || p instanceof String;\n}\n\nfunction isNativeBlob(p) {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nfunction isNativeBlobDefined() {\n  return typeof Blob !== 'undefined';\n}\n\nfunction validateNumber(argument, minValue, maxValue, value) {\n  if (value < minValue) {\n    throw invalidArgument(\"Invalid value for '\" + argument + \"'. Expected \" + minValue + \" or greater.\");\n  }\n\n  if (value > maxValue) {\n    throw invalidArgument(\"Invalid value for '\" + argument + \"'. Expected \" + maxValue + \" or less.\");\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction makeUrl(urlPart, host) {\n  var protocolMatch = host.match(/^(\\w+):\\/\\/.+/);\n  var protocol = protocolMatch === null || protocolMatch === void 0 ? void 0 : protocolMatch[1];\n  var origin = host;\n\n  if (protocol == null) {\n    origin = \"https://\" + host;\n  }\n\n  return origin + \"/v0\" + urlPart;\n}\n\nfunction makeQueryString(params) {\n  var encode = encodeURIComponent;\n  var queryPart = '?';\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      var nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  } // Chop off the extra '&' or '?' on the end\n\n\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar NetworkRequest = function () {\n  function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\n    var _this = this;\n\n    this.pendingConnection_ = null;\n    this.backoffId_ = null;\n    this.canceled_ = false;\n    this.appDelete_ = false;\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n\n      _this.start_();\n    });\n  }\n  /**\r\n   * Actually starts the retry loop.\r\n   */\n\n\n  NetworkRequest.prototype.start_ = function () {\n    var self = this;\n\n    function doTheRequest(backoffCallback, canceled) {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n\n      var connection = self.pool_.createConnection();\n      self.pendingConnection_ = connection;\n\n      function progressListener(progressEvent) {\n        var loaded = progressEvent.loaded;\n        var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n\n      if (self.progressCallback_ !== null) {\n        connection.addUploadProgressListener(progressListener);\n      } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n      connection.send(self.url_, self.method_, self.body_, self.headers_).then(function () {\n        if (self.progressCallback_ !== null) {\n          connection.removeUploadProgressListener(progressListener);\n        }\n\n        self.pendingConnection_ = null;\n        var hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\n        var status = connection.getStatus();\n\n        if (!hitServer || self.isRetryStatusCode_(status)) {\n          var wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\n          backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n          return;\n        }\n\n        var successCode = self.successCodes_.indexOf(status) !== -1;\n        backoffCallback(true, new RequestEndStatus(successCode, connection));\n      });\n    }\n    /**\r\n     * @param requestWentThrough - True if the request eventually went\r\n     *     through, false if it hit the retry limit or was canceled.\r\n     */\n\n\n    function backoffDone(requestWentThrough, status) {\n      var resolve = self.resolve_;\n      var reject = self.reject_;\n      var connection = status.connection;\n\n      if (status.wasSuccessCode) {\n        try {\n          var result = self.callback_(connection, connection.getResponseText());\n\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (connection !== null) {\n          var err = unknown();\n          err.serverResponse = connection.getResponseText();\n\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(connection, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            var err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            var err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.cancel = function (appDelete) {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n\n    if (this.pendingConnection_ !== null) {\n      this.pendingConnection_.abort();\n    }\n  };\n\n  NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    var isFiveHundredCode = status >= 500 && status < 600;\n    var extraRetryCodes = [// Request Timeout: web server didn't receive full request in time.\n    408, // Too Many Requests: you're getting rate-limited, basically.\n    429];\n    var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  };\n\n  return NetworkRequest;\n}();\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\n\n\nvar RequestEndStatus = function () {\n  function RequestEndStatus(wasSuccessCode, connection, canceled) {\n    this.wasSuccessCode = wasSuccessCode;\n    this.connection = connection;\n    this.canceled = !!canceled;\n  }\n\n  return RequestEndStatus;\n}();\n\nfunction addAuthHeader_(headers, authToken) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nfunction addVersionHeader_(headers, firebaseVersion) {\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + (firebaseVersion !== null && firebaseVersion !== void 0 ? firebaseVersion : 'AppManager');\n}\n\nfunction addGmpidHeader_(headers, appId) {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\nfunction addAppCheckHeader_(headers, appCheckToken) {\n  if (appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = appCheckToken;\n  }\n}\n\nfunction makeRequest(requestInfo, appId, authToken, appCheckToken, pool, firebaseVersion) {\n  var queryPart = makeQueryString(requestInfo.urlParams);\n  var url = requestInfo.url + queryPart;\n  var headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers, firebaseVersion);\n  addAppCheckHeader_(headers, appCheckToken);\n  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getBlobBuilder() {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\n\n\nfunction getBlob() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var BlobBuilder = getBlobBuilder();\n\n  if (BlobBuilder !== undefined) {\n    var bb = new BlobBuilder();\n\n    for (var i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new FirebaseStorageError(\"unsupported-environment\"\n      /* UNSUPPORTED_ENVIRONMENT */\n      , \"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\n\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n *\r\n * @internal\r\n */\n\n\nvar FbsBlob = function () {\n  function FbsBlob(data, elideCopy) {\n    var size = 0;\n    var blobType = '';\n\n    if (isNativeBlob(data)) {\n      this.data_ = data;\n      size = data.size;\n      blobType = data.type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data);\n      }\n\n      size = data.length;\n    }\n\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  FbsBlob.prototype.size = function () {\n    return this.size_;\n  };\n\n  FbsBlob.prototype.type = function () {\n    return this.type_;\n  };\n\n  FbsBlob.prototype.slice = function (startByte, endByte) {\n    if (isNativeBlob(this.data_)) {\n      var realBlob = this.data_;\n      var sliced = sliceBlob(realBlob, startByte, endByte);\n\n      if (sliced === null) {\n        return null;\n      }\n\n      return new FbsBlob(sliced);\n    } else {\n      var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n      return new FbsBlob(slice, true);\n    }\n  };\n\n  FbsBlob.getBlob = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (isNativeBlobDefined()) {\n      var blobby = args.map(function (val) {\n        if (val instanceof FbsBlob) {\n          return val.data_;\n        } else {\n          return val;\n        }\n      });\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      var uint8Arrays = args.map(function (val) {\n        if (isString(val)) {\n          return dataFromString(StringFormat.RAW, val).data;\n        } else {\n          // Blobs don't exist, so this has to be a Uint8Array.\n          return val.data_;\n        }\n      });\n      var finalLength_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        finalLength_1 += array.byteLength;\n      });\n      var merged_1 = new Uint8Array(finalLength_1);\n      var index_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        for (var i = 0; i < array.length; i++) {\n          merged_1[index_1++] = array[i];\n        }\n      });\n      return new FbsBlob(merged_1, true);\n    }\n  };\n\n  FbsBlob.prototype.uploadData = function () {\n    return this.data_;\n  };\n\n  return FbsBlob;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\n\n\nfunction jsonObjectOrNull(s) {\n  var obj;\n\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n\n/**\r\n * @return Null if the path is already at the root.\r\n */\n\n\nfunction parent(path) {\n  if (path.length === 0) {\n    return null;\n  }\n\n  var index = path.lastIndexOf('/');\n\n  if (index === -1) {\n    return '';\n  }\n\n  var newPath = path.slice(0, index);\n  return newPath;\n}\n\nfunction child(path, childPath) {\n  var canonicalChildPath = childPath.split('/').filter(function (component) {\n    return component.length > 0;\n  }).join('/');\n\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\n\n\nfunction lastComponent(path) {\n  var index = path.lastIndexOf('/', path.length - 2);\n\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction noXform_(metadata, value) {\n  return value;\n}\n\nvar Mapping = function () {\n  function Mapping(server, local, writable, xform) {\n    this.server = server;\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n\n  return Mapping;\n}();\n\nvar mappings_ = null;\n\nfunction xformPath(fullPath) {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nfunction getMappings() {\n  if (mappings_) {\n    return mappings_;\n  }\n\n  var mappings = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n\n  function mappingsXformPath(_metadata, fullPath) {\n    return xformPath(fullPath);\n  }\n\n  var nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n  /**\r\n   * Coerces the second param to a number, if it is defined.\r\n   */\n\n  function xformSize(_metadata, size) {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n\n  var sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nfunction addRef(metadata, service) {\n  function generateRef() {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var loc = new Location(bucket, path);\n    return service._makeStorageReference(loc);\n  }\n\n  Object.defineProperty(metadata, 'ref', {\n    get: generateRef\n  });\n}\n\nfunction fromResource(service, resource, mappings) {\n  var metadata = {};\n  metadata['type'] = 'file';\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n\n  addRef(metadata, service);\n  return metadata;\n}\n\nfunction fromResourceString(service, resourceString, mappings) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromResource(service, resource, mappings);\n}\n\nfunction downloadUrlFromResourceString(metadata, resourceString, host) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n\n  var tokens = obj['downloadTokens'];\n\n  if (tokens.length === 0) {\n    return null;\n  }\n\n  var encode = encodeURIComponent;\n  var tokensList = tokens.split(',');\n  var urls = tokensList.map(function (token) {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    var base = makeUrl(urlPart, host);\n    var queryString = makeQueryString({\n      alt: 'media',\n      token: token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nfunction toResourceString(metadata, mappings) {\n  var resource = {};\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n\n  return JSON.stringify(resource);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PREFIXES_KEY = 'prefixes';\nvar ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(service, bucket, resource) {\n  var listResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n\n  if (resource[PREFIXES_KEY]) {\n    for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\n      var path = _a[_i];\n      var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n\n      var reference = service._makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\n\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\n      var item = _c[_b];\n\n      var reference = service._makeStorageReference(new Location(bucket, item['name']));\n\n      listResult.items.push(reference);\n    }\n  }\n\n  return listResult;\n}\n\nfunction fromResponseString(service, bucket, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromBackendResponse(service, bucket, resource);\n}\n\nvar RequestInfo = function () {\n  function RequestInfo(url, method,\n  /**\r\n   * Returns the value with which to resolve the request's promise. Only called\r\n   * if the request is successful. Throw from this function to reject the\r\n   * returned Request's promise with the thrown error.\r\n   * Note: The XhrIo passed to this function may be reused after this callback\r\n   * returns. Do not keep a reference to it in any way.\r\n   */\n  handler, timeout) {\n    this.url = url;\n    this.method = method;\n    this.handler = handler;\n    this.timeout = timeout;\n    this.urlParams = {};\n    this.headers = {};\n    this.body = null;\n    this.errorHandler = null;\n    /**\r\n     * Called with the current number of bytes uploaded and total size (-1 if not\r\n     * computable) of the request body (i.e. used to report upload progress).\r\n     */\n\n    this.progressCallback = null;\n    this.successCodes = [200];\n    this.additionalRetryCodes = [];\n  }\n\n  return RequestInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\n\n\nfunction handlerCheck(cndn) {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nfunction metadataHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata;\n  }\n\n  return handler;\n}\n\nfunction listHandler(service, bucket) {\n  function handler(xhr, text) {\n    var listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult;\n  }\n\n  return handler;\n}\n\nfunction downloadUrlHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(metadata, text, service.host);\n  }\n\n  return handler;\n}\n\nfunction sharedErrorHandler(location) {\n  function errorHandler(xhr, err) {\n    var newErr;\n\n    if (xhr.getStatus() === 401) {\n      if ( // This exact message string is the only consistent part of the\n      // server's error response that identifies it as an App Check error.\n      xhr.getResponseText().includes('Firebase App Check token is invalid')) {\n        newErr = unauthorizedApp();\n      } else {\n        newErr = unauthenticated();\n      }\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction objectErrorHandler(location) {\n  var shared = sharedErrorHandler(location);\n\n  function errorHandler(xhr, err) {\n    var newErr = shared(xhr, err);\n\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction getMetadata$2(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart, service.host);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction list$2(service, location, delimiter, pageToken, maxResults) {\n  var urlParams = {};\n\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n\n  var urlPart = location.bucketOnlyServerUrl();\n  var url = makeUrl(urlPart, service.host);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nfunction getDownloadUrl(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart, service.host);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction updateMetadata$2(service, location, metadata, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart, service.host);\n  var method = 'PATCH';\n  var body = toResourceString(metadata, mappings);\n  var headers = {\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction deleteObject$2(service, location) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart, service.host);\n  var method = 'DELETE';\n  var timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr, _text) {}\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction determineContentType_(metadata, blob) {\n  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\n\nfunction metadataForUpload_(location, blob, metadata) {\n  var metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n\n  return metadataClone;\n}\n/**\r\n * Prepare RequestInfo for uploads as Content-Type: multipart.\r\n */\n\n\nfunction multipartUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var headers = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary() {\n    var str = '';\n\n    for (var i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n\n    return str;\n  }\n\n  var boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  var metadata_ = metadataForUpload_(location, blob, metadata);\n  var metadataString = toResourceString(metadata_, mappings);\n  var preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata_['contentType'] + '\\r\\n\\r\\n';\n  var postBlobPart = '\\r\\n--' + boundary + '--';\n  var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  var urlParams = {\n    name: metadata_['fullPath']\n  };\n  var url = makeUrl(urlPart, service.host);\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\n\n\nvar ResumableUploadStatus = function () {\n  function ResumableUploadStatus(current, total, finalized, metadata) {\n    this.current = current;\n    this.total = total;\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n\n  return ResumableUploadStatus;\n}();\n\nfunction checkResumeHeader_(xhr, allowed) {\n  var status = null;\n\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n\n  var allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status;\n}\n\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var metadataForUpload = metadataForUpload_(location, blob, metadata);\n  var urlParams = {\n    name: metadataForUpload['fullPath']\n  };\n  var url = makeUrl(urlPart, service.host);\n  var method = 'POST';\n  var headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': \"\" + blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var body = toResourceString(metadataForUpload, mappings);\n  var timeout = service.maxUploadRetryTime;\n\n  function handler(xhr) {\n    checkResumeHeader_(xhr);\n    var url;\n\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    handlerCheck(isString(url));\n    return url;\n  }\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\n\n\nfunction getResumableUploadStatus(service, location, url, blob) {\n  var headers = {\n    'X-Goog-Upload-Command': 'query'\n  };\n\n  function handler(xhr) {\n    var status = checkResumeHeader_(xhr, ['active', 'final']);\n    var sizeString = null;\n\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    var size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\n\n\nvar RESUMABLE_UPLOAD_CHUNK_SIZE = 256 * 1024;\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\n\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  var status_ = new ResumableUploadStatus(0, 0);\n\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n\n  var bytesLeft = status_.total - status_.current;\n  var bytesToUpload = bytesLeft;\n\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n\n  var startByte = status_.current;\n  var endByte = startByte + bytesToUpload;\n  var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  var headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': \"\" + status_.current\n  };\n  var body = blob.slice(startByte, endByte);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr, text) {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    var newCurrent = status_.current + bytesToUpload;\n    var size = blob.size();\n    var metadata;\n\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n\n    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n  }\n\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Observer = function () {\n  function Observer(nextOrObserver, error, complete) {\n    var asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\n\n    if (asFunctions) {\n      this.next = nextOrObserver;\n      this.error = error;\n      this.complete = complete;\n    } else {\n      var observer = nextOrObserver;\n      this.next = observer.next;\n      this.error = observer.error;\n      this.complete = observer.complete;\n    }\n  }\n\n  return Observer;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction async(f) {\n  return function () {\n    var argsToForward = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      argsToForward[_i] = arguments[_i];\n    } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    Promise.resolve().then(function () {\n      return f.apply(void 0, argsToForward);\n    });\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n * @internal\r\n */\n\n\nvar UploadTask = function () {\n  /**\r\n   * @param ref - The firebaseStorage.Reference object this task came\r\n   *     from, untyped to avoid cyclic dependencies.\r\n   * @param blob - The blob to upload.\r\n   */\n  function UploadTask(ref, blob, metadata) {\n    var _this = this;\n\n    if (metadata === void 0) {\n      metadata = null;\n    }\n    /**\r\n     * Number of bytes transferred so far.\r\n     */\n\n\n    this._transferred = 0;\n    this._needToFetchStatus = false;\n    this._needToFetchMetadata = false;\n    this._observers = [];\n    this._error = undefined;\n    this._uploadUrl = undefined;\n    this._request = undefined;\n    this._chunkMultiplier = 1;\n    this._resolve = undefined;\n    this._reject = undefined;\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = \"running\"\n    /* RUNNING */\n    ;\n\n    this._errorHandler = function (error) {\n      _this._request = undefined;\n      _this._chunkMultiplier = 1;\n\n      if (error._codeEquals(\"canceled\"\n      /* CANCELED */\n      )) {\n        _this._needToFetchStatus = true;\n\n        _this.completeTransitions_();\n      } else {\n        _this._error = error;\n\n        _this._transition(\"error\"\n        /* ERROR */\n        );\n      }\n    };\n\n    this._metadataErrorHandler = function (error) {\n      _this._request = undefined;\n\n      if (error._codeEquals(\"canceled\"\n      /* CANCELED */\n      )) {\n        _this.completeTransitions_();\n      } else {\n        _this._error = error;\n\n        _this._transition(\"error\"\n        /* ERROR */\n        );\n      }\n    };\n\n    this._promise = new Promise(function (resolve, reject) {\n      _this._resolve = resolve;\n      _this._reject = reject;\n\n      _this._start();\n    }); // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n\n    this._promise.then(null, function () {});\n  }\n\n  UploadTask.prototype._makeProgressCallback = function () {\n    var _this = this;\n\n    var sizeBefore = this._transferred;\n    return function (loaded) {\n      return _this._updateProgress(sizeBefore + loaded);\n    };\n  };\n\n  UploadTask.prototype._shouldDoResumable = function (blob) {\n    return blob.size() > 256 * 1024;\n  };\n\n  UploadTask.prototype._start = function () {\n    if (this._state !== \"running\"\n    /* RUNNING */\n    ) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n\n    if (this._request !== undefined) {\n      return;\n    }\n\n    if (this._resumable) {\n      if (this._uploadUrl === undefined) {\n        this._createResumable();\n      } else {\n        if (this._needToFetchStatus) {\n          this._fetchStatus();\n        } else {\n          if (this._needToFetchMetadata) {\n            // Happens if we miss the metadata on upload completion.\n            this._fetchMetadata();\n          } else {\n            this._continueUpload();\n          }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }\n  };\n\n  UploadTask.prototype._resolveToken = function (callback) {\n    var _this = this; // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    Promise.all([this._ref.storage._getAuthToken(), this._ref.storage._getAppCheckToken()]).then(function (_a) {\n      var authToken = _a[0],\n          appCheckToken = _a[1];\n\n      switch (_this._state) {\n        case \"running\"\n        /* RUNNING */\n        :\n          callback(authToken, appCheckToken);\n          break;\n\n        case \"canceling\"\n        /* CANCELING */\n        :\n          _this._transition(\"canceled\"\n          /* CANCELED */\n          );\n\n          break;\n\n        case \"pausing\"\n        /* PAUSING */\n        :\n          _this._transition(\"paused\"\n          /* PAUSED */\n          );\n\n          break;\n      }\n    });\n  }; // TODO(andysoto): assert false\n\n\n  UploadTask.prototype._createResumable = function () {\n    var _this = this;\n\n    this._resolveToken(function (authToken, appCheckToken) {\n      var requestInfo = createResumableUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\n\n      var createRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\n\n      _this._request = createRequest;\n      createRequest.getPromise().then(function (url) {\n        _this._request = undefined;\n        _this._uploadUrl = url;\n        _this._needToFetchStatus = false;\n\n        _this.completeTransitions_();\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._fetchStatus = function () {\n    var _this = this; // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n\n    var url = this._uploadUrl;\n\n    this._resolveToken(function (authToken, appCheckToken) {\n      var requestInfo = getResumableUploadStatus(_this._ref.storage, _this._ref._location, url, _this._blob);\n\n      var statusRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\n\n      _this._request = statusRequest;\n      statusRequest.getPromise().then(function (status) {\n        status = status;\n        _this._request = undefined;\n\n        _this._updateProgress(status.current);\n\n        _this._needToFetchStatus = false;\n\n        if (status.finalized) {\n          _this._needToFetchMetadata = true;\n        }\n\n        _this.completeTransitions_();\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._continueUpload = function () {\n    var _this = this;\n\n    var chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n    var status = new ResumableUploadStatus(this._transferred, this._blob.size()); // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n    var url = this._uploadUrl;\n\n    this._resolveToken(function (authToken, appCheckToken) {\n      var requestInfo;\n\n      try {\n        requestInfo = continueResumableUpload(_this._ref._location, _this._ref.storage, url, _this._blob, chunkSize, _this._mappings, status, _this._makeProgressCallback());\n      } catch (e) {\n        _this._error = e;\n\n        _this._transition(\"error\"\n        /* ERROR */\n        );\n\n        return;\n      }\n\n      var uploadRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\n\n      _this._request = uploadRequest;\n      uploadRequest.getPromise().then(function (newStatus) {\n        _this._increaseMultiplier();\n\n        _this._request = undefined;\n\n        _this._updateProgress(newStatus.current);\n\n        if (newStatus.finalized) {\n          _this._metadata = newStatus.metadata;\n\n          _this._transition(\"success\"\n          /* SUCCESS */\n          );\n        } else {\n          _this.completeTransitions_();\n        }\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._increaseMultiplier = function () {\n    var currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier; // Max chunk size is 32M.\n\n    if (currentSize < 32 * 1024 * 1024) {\n      this._chunkMultiplier *= 2;\n    }\n  };\n\n  UploadTask.prototype._fetchMetadata = function () {\n    var _this = this;\n\n    this._resolveToken(function (authToken, appCheckToken) {\n      var requestInfo = getMetadata$2(_this._ref.storage, _this._ref._location, _this._mappings);\n\n      var metadataRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\n\n      _this._request = metadataRequest;\n      metadataRequest.getPromise().then(function (metadata) {\n        _this._request = undefined;\n        _this._metadata = metadata;\n\n        _this._transition(\"success\"\n        /* SUCCESS */\n        );\n      }, _this._metadataErrorHandler);\n    });\n  };\n\n  UploadTask.prototype._oneShotUpload = function () {\n    var _this = this;\n\n    this._resolveToken(function (authToken, appCheckToken) {\n      var requestInfo = multipartUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\n\n      var multipartRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\n\n      _this._request = multipartRequest;\n      multipartRequest.getPromise().then(function (metadata) {\n        _this._request = undefined;\n        _this._metadata = metadata;\n\n        _this._updateProgress(_this._blob.size());\n\n        _this._transition(\"success\"\n        /* SUCCESS */\n        );\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._updateProgress = function (transferred) {\n    var old = this._transferred;\n    this._transferred = transferred; // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n\n    if (this._transferred !== old) {\n      this._notifyObservers();\n    }\n  };\n\n  UploadTask.prototype._transition = function (state) {\n    if (this._state === state) {\n      return;\n    }\n\n    switch (state) {\n      case \"canceling\"\n      /* CANCELING */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n\n        break;\n\n      case \"pausing\"\n      /* PAUSING */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this._state = state;\n\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n\n        break;\n\n      case \"running\"\n      /* RUNNING */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        var wasPaused = this._state === \"paused\"\n        /* PAUSED */\n        ;\n        this._state = state;\n\n        if (wasPaused) {\n          this._notifyObservers();\n\n          this._start();\n        }\n\n        break;\n\n      case \"paused\"\n      /* PAUSED */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n\n      case \"canceled\"\n      /* CANCELED */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._error = canceled();\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n\n      case \"error\"\n      /* ERROR */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n\n      case \"success\"\n      /* SUCCESS */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n    }\n  };\n\n  UploadTask.prototype.completeTransitions_ = function () {\n    switch (this._state) {\n      case \"pausing\"\n      /* PAUSING */\n      :\n        this._transition(\"paused\"\n        /* PAUSED */\n        );\n\n        break;\n\n      case \"canceling\"\n      /* CANCELING */\n      :\n        this._transition(\"canceled\"\n        /* CANCELED */\n        );\n\n        break;\n\n      case \"running\"\n      /* RUNNING */\n      :\n        this._start();\n\n        break;\n    }\n  };\n\n  Object.defineProperty(UploadTask.prototype, \"snapshot\", {\n    /**\r\n     * A snapshot of the current task state.\r\n     */\n    get: function () {\n      var externalState = taskStateFromInternalTaskState(this._state);\n      return {\n        bytesTransferred: this._transferred,\n        totalBytes: this._blob.size(),\n        state: externalState,\n        metadata: this._metadata,\n        task: this,\n        ref: this._ref\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Adds a callback for an event.\r\n   * @param type - The type of event to listen for.\r\n   * @param nextOrObserver -\r\n   *     The `next` function, which gets called for each item in\r\n   *     the event stream, or an observer object with some or all of these three\r\n   *     properties (`next`, `error`, `complete`).\r\n   * @param error - A function that gets called with a `FirebaseStorageError`\r\n   *     if the event stream ends due to an error.\r\n   * @param completed - A function that gets called if the\r\n   *     event stream ends normally.\r\n   * @returns\r\n   *     If only the event argument is passed, returns a function you can use to\r\n   *     add callbacks (see the examples above). If more than just the event\r\n   *     argument is passed, returns a function you can call to unregister the\r\n   *     callbacks.\r\n   */\n\n  UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\n    var _this = this;\n\n    var observer = new Observer(nextOrObserver, error, completed);\n\n    this._addObserver(observer);\n\n    return function () {\n      _this._removeObserver(observer);\n    };\n  };\n  /**\r\n   * This object behaves like a Promise, and resolves with its snapshot data\r\n   * when the upload completes.\r\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n   * @param onRejected - The rejection callback.\r\n   */\n\n\n  UploadTask.prototype.then = function (onFulfilled, onRejected) {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this._promise.then(onFulfilled, onRejected);\n  };\n  /**\r\n   * Equivalent to calling `then(null, onRejected)`.\r\n   */\n\n\n  UploadTask.prototype.catch = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n  /**\r\n   * Adds the given observer.\r\n   */\n\n\n  UploadTask.prototype._addObserver = function (observer) {\n    this._observers.push(observer);\n\n    this._notifyObserver(observer);\n  };\n  /**\r\n   * Removes the given observer.\r\n   */\n\n\n  UploadTask.prototype._removeObserver = function (observer) {\n    var i = this._observers.indexOf(observer);\n\n    if (i !== -1) {\n      this._observers.splice(i, 1);\n    }\n  };\n\n  UploadTask.prototype._notifyObservers = function () {\n    var _this = this;\n\n    this._finishPromise();\n\n    var observers = this._observers.slice();\n\n    observers.forEach(function (observer) {\n      _this._notifyObserver(observer);\n    });\n  };\n\n  UploadTask.prototype._finishPromise = function () {\n    if (this._resolve !== undefined) {\n      var triggered = true;\n\n      switch (taskStateFromInternalTaskState(this._state)) {\n        case TaskState.SUCCESS:\n          async(this._resolve.bind(null, this.snapshot))();\n          break;\n\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          var toCall = this._reject;\n          async(toCall.bind(null, this._error))();\n          break;\n\n        default:\n          triggered = false;\n          break;\n      }\n\n      if (triggered) {\n        this._resolve = undefined;\n        this._reject = undefined;\n      }\n    }\n  };\n\n  UploadTask.prototype._notifyObserver = function (observer) {\n    var externalState = taskStateFromInternalTaskState(this._state);\n\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          async(observer.next.bind(observer, this.snapshot))();\n        }\n\n        break;\n\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          async(observer.complete.bind(observer))();\n        }\n\n        break;\n\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          async(observer.error.bind(observer, this._error))();\n        }\n\n        break;\n\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          async(observer.error.bind(observer, this._error))();\n        }\n\n    }\n  };\n  /**\r\n   * Resumes a paused task. Has no effect on a currently running or failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.resume = function () {\n    var valid = this._state === \"paused\"\n    /* PAUSED */\n    || this._state === \"pausing\"\n    /* PAUSING */\n    ;\n\n    if (valid) {\n      this._transition(\"running\"\n      /* RUNNING */\n      );\n    }\n\n    return valid;\n  };\n  /**\r\n   * Pauses a currently running task. Has no effect on a paused or failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.pause = function () {\n    var valid = this._state === \"running\"\n    /* RUNNING */\n    ;\n\n    if (valid) {\n      this._transition(\"pausing\"\n      /* PAUSING */\n      );\n    }\n\n    return valid;\n  };\n  /**\r\n   * Cancels a currently running or paused task. Has no effect on a complete or\r\n   * failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.cancel = function () {\n    var valid = this._state === \"running\"\n    /* RUNNING */\n    || this._state === \"pausing\"\n    /* PAUSING */\n    ;\n\n    if (valid) {\n      this._transition(\"canceling\"\n      /* CANCELING */\n      );\n    }\n\n    return valid;\n  };\n\n  return UploadTask;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @internal\r\n * @param _location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\n\n\nvar Reference = function () {\n  function Reference(_service, location) {\n    this._service = _service;\n\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location, _service.host);\n    }\n  }\n  /**\r\n   * Returns the URL for the bucket and path this object references,\r\n   *     in the form gs://<bucket>/<object-path>\r\n   * @override\r\n   */\n\n\n  Reference.prototype.toString = function () {\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\n  };\n\n  Reference.prototype._newRef = function (service, location) {\n    return new Reference(service, location);\n  };\n\n  Object.defineProperty(Reference.prototype, \"root\", {\n    /**\r\n     * A reference to the root of this object's bucket.\r\n     */\n    get: function () {\n      var location = new Location(this._location.bucket, '');\n      return this._newRef(this._service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"bucket\", {\n    /**\r\n     * The name of the bucket containing this reference's object.\r\n     */\n    get: function () {\n      return this._location.bucket;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"fullPath\", {\n    /**\r\n     * The full path of this object.\r\n     */\n    get: function () {\n      return this._location.path;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"name\", {\n    /**\r\n     * The short name of this object, which is the last component of the full path.\r\n     * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\r\n     */\n    get: function () {\n      return lastComponent(this._location.path);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"storage\", {\n    /**\r\n     * The `StorageService` instance this `StorageReference` is associated with.\r\n     */\n    get: function () {\n      return this._service;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    /**\r\n     * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\r\n     * this reference is the root.\r\n     */\n    get: function () {\n      var newPath = parent(this._location.path);\n\n      if (newPath === null) {\n        return null;\n      }\n\n      var location = new Location(this._location.bucket, newPath);\n      return new Reference(this._service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Utility function to throw an error in methods that do not accept a root reference.\r\n   */\n\n  Reference.prototype._throwIfRoot = function (name) {\n    if (this._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n\n  return Reference;\n}();\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns An UploadTask\r\n */\n\n\nfunction uploadBytesResumable$1(ref, data, metadata) {\n  ref._throwIfRoot('uploadBytesResumable');\n\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\n\n\nfunction listAll$1(ref) {\n  var accumulator = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(function () {\n    return accumulator;\n  });\n}\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\n\n\nfunction listAllHelper(ref, accumulator, pageToken) {\n  return __awaiter(this, void 0, void 0, function () {\n    var opt, nextPage;\n\n    var _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          opt = {\n            // maxResults is 1000 by default.\n            pageToken: pageToken\n          };\n          return [4\n          /*yield*/\n          , list$1(ref, opt)];\n\n        case 1:\n          nextPage = _c.sent();\n\n          (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\n\n          (_b = accumulator.items).push.apply(_b, nextPage.items);\n\n          if (!(nextPage.nextPageToken != null)) return [3\n          /*break*/\n          , 3];\n          return [4\n          /*yield*/\n          , listAllHelper(ref, accumulator, nextPage.nextPageToken)];\n\n        case 2:\n          _c.sent();\n\n          _c.label = 3;\n\n        case 3:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\n\n\nfunction list$1(ref, options) {\n  return __awaiter(this, void 0, void 0, function () {\n    var op, requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (options != null) {\n            if (typeof options.maxResults === 'number') {\n              validateNumber('options.maxResults',\n              /* minValue= */\n              1,\n              /* maxValue= */\n              1000, options.maxResults);\n            }\n          }\n\n          op = options || {};\n          requestInfo = list$2(ref.storage, ref._location,\n          /*delimiter= */\n          '/', op.pageToken, op.maxResults);\n          return [4\n          /*yield*/\n          , ref.storage.makeRequestWithTokens(requestInfo)];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent().getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * A promise that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\n\n\nfunction getMetadata$1(ref) {\n  return __awaiter(this, void 0, void 0, function () {\n    var requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('getMetadata');\n\n          requestInfo = getMetadata$2(ref.storage, ref._location, getMappings());\n          return [4\n          /*yield*/\n          , ref.storage.makeRequestWithTokens(requestInfo)];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent().getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A promise that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\n\n\nfunction updateMetadata$1(ref, metadata) {\n  return __awaiter(this, void 0, void 0, function () {\n    var requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('updateMetadata');\n\n          requestInfo = updateMetadata$2(ref.storage, ref._location, metadata, getMappings());\n          return [4\n          /*yield*/\n          , ref.storage.makeRequestWithTokens(requestInfo)];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent().getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A promise that resolves with the download\r\n *     URL for this object.\r\n */\n\n\nfunction getDownloadURL$1(ref) {\n  return __awaiter(this, void 0, void 0, function () {\n    var requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('getDownloadURL');\n\n          requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\n          return [4\n          /*yield*/\n          , ref.storage.makeRequestWithTokens(requestInfo)];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent().getPromise().then(function (url) {\n            if (url === null) {\n              throw noDownloadURL();\n            }\n\n            return url;\n          })];\n      }\n    });\n  });\n}\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A promise that resolves if the deletion succeeds.\r\n */\n\n\nfunction deleteObject$1(ref) {\n  return __awaiter(this, void 0, void 0, function () {\n    var requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('deleteObject');\n\n          requestInfo = deleteObject$2(ref.storage, ref._location);\n          return [4\n          /*yield*/\n          , ref.storage.makeRequestWithTokens(requestInfo)];\n\n        case 1:\n          return [2\n          /*return*/\n          , _a.sent().getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n *\r\n * @param ref - StorageReference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n *\r\n */\n\n\nfunction _getChild$1(ref, childPath) {\n  var newPath = child(ref._location.path, childPath);\n  var location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isUrl(path) {\n  return /^[A-Za-z]+:\\/\\//.test(path);\n}\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\n\n\nfunction refFromURL(service, url) {\n  return new Reference(service, url);\n}\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\n\n\nfunction refFromPath(ref, path) {\n  if (ref instanceof FirebaseStorageImpl) {\n    var service = ref;\n\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n\n    var reference = new Reference(service, service._bucket);\n\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      return _getChild$1(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\n\nfunction ref$1(serviceOrRef, pathOrUrl) {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof FirebaseStorageImpl) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extractBucket(host, config) {\n  var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\n\n  if (bucketString == null) {\n    return null;\n  }\n\n  return Location.makeFromBucketSpec(bucketString, host);\n}\n\nfunction connectStorageEmulator$1(storage, host, port, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  storage.host = \"http://\" + host + \":\" + port;\n  var mockUserToken = options.mockUserToken;\n\n  if (mockUserToken) {\n    storage._overrideAuthToken = typeof mockUserToken === 'string' ? mockUserToken : createMockUserToken(mockUserToken, storage.app.options.projectId);\n  }\n}\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @public\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n */\n\n\nvar FirebaseStorageImpl = function () {\n  function FirebaseStorageImpl(\n  /**\r\n   * FirebaseApp associated with this StorageService instance.\r\n   */\n  app, _authProvider,\n  /**\r\n   * @internal\r\n   */\n  _appCheckProvider,\n  /**\r\n   * @internal\r\n   */\n  _pool, _url, _firebaseVersion) {\n    this.app = app;\n    this._authProvider = _authProvider;\n    this._appCheckProvider = _appCheckProvider;\n    this._pool = _pool;\n    this._url = _url;\n    this._firebaseVersion = _firebaseVersion;\n    this._bucket = null;\n    /**\r\n     * This string can be in the formats:\r\n     * - host\r\n     * - host:port\r\n     * - protocol://host:port\r\n     */\n\n    this._host = DEFAULT_HOST;\n    this._appId = null;\n    this._deleted = false;\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url, this._host);\n    } else {\n      this._bucket = extractBucket(this._host, this.app.options);\n    }\n  }\n\n  Object.defineProperty(FirebaseStorageImpl.prototype, \"host\", {\n    get: function () {\n      return this._host;\n    },\n\n    /**\r\n     * Set host string for this service.\r\n     * @param host - host string in the form of host, host:port,\r\n     * or protocol://host:port\r\n     */\n    set: function (host) {\n      this._host = host;\n\n      if (this._url != null) {\n        this._bucket = Location.makeFromBucketSpec(this._url, host);\n      } else {\n        this._bucket = extractBucket(host, this.app.options);\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageImpl.prototype, \"maxUploadRetryTime\", {\n    /**\r\n     * The maximum time to retry uploads in milliseconds.\r\n     */\n    get: function () {\n      return this._maxUploadRetryTime;\n    },\n    set: function (time) {\n      validateNumber('time',\n      /* minValue=*/\n      0,\n      /* maxValue= */\n      Number.POSITIVE_INFINITY, time);\n      this._maxUploadRetryTime = time;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageImpl.prototype, \"maxOperationRetryTime\", {\n    /**\r\n     * The maximum time to retry operations other than uploads or downloads in\r\n     * milliseconds.\r\n     */\n    get: function () {\n      return this._maxOperationRetryTime;\n    },\n    set: function (time) {\n      validateNumber('time',\n      /* minValue=*/\n      0,\n      /* maxValue= */\n      Number.POSITIVE_INFINITY, time);\n      this._maxOperationRetryTime = time;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  FirebaseStorageImpl.prototype._getAuthToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var auth, tokenData;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this._overrideAuthToken) {\n              return [2\n              /*return*/\n              , this._overrideAuthToken];\n            }\n\n            auth = this._authProvider.getImmediate({\n              optional: true\n            });\n            if (!auth) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , auth.getToken()];\n\n          case 1:\n            tokenData = _a.sent();\n\n            if (tokenData !== null) {\n              return [2\n              /*return*/\n              , tokenData.accessToken];\n            }\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , null];\n        }\n      });\n    });\n  };\n\n  FirebaseStorageImpl.prototype._getAppCheckToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var appCheck, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            appCheck = this._appCheckProvider.getImmediate({\n              optional: true\n            });\n            if (!appCheck) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , appCheck.getToken()];\n\n          case 1:\n            result = _a.sent(); // TODO: What do we want to do if there is an error getting the token?\n            // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\n            // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\n            // the token (actual or dummy) to send requests.\n\n            return [2\n            /*return*/\n            , result.token];\n\n          case 2:\n            return [2\n            /*return*/\n            , null];\n        }\n      });\n    });\n  };\n  /**\r\n   * Stop running requests and prevent more from being created.\r\n   */\n\n\n  FirebaseStorageImpl.prototype._delete = function () {\n    if (!this._deleted) {\n      this._deleted = true;\n\n      this._requests.forEach(function (request) {\n        return request.cancel();\n      });\n\n      this._requests.clear();\n    }\n\n    return Promise.resolve();\n  };\n  /**\r\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n   * at the given Location.\r\n   */\n\n\n  FirebaseStorageImpl.prototype._makeStorageReference = function (loc) {\n    return new Reference(this, loc);\n  };\n  /**\r\n   * @param requestInfo - HTTP RequestInfo object\r\n   * @param authToken - Firebase auth token\r\n   */\n\n\n  FirebaseStorageImpl.prototype._makeRequest = function (requestInfo, authToken, appCheckToken) {\n    var _this = this;\n\n    if (!this._deleted) {\n      var request_1 = makeRequest(requestInfo, this._appId, authToken, appCheckToken, this._pool, this._firebaseVersion);\n\n      this._requests.add(request_1); // Request removes itself from set when complete.\n\n\n      request_1.getPromise().then(function () {\n        return _this._requests.delete(request_1);\n      }, function () {\n        return _this._requests.delete(request_1);\n      });\n      return request_1;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  };\n\n  FirebaseStorageImpl.prototype.makeRequestWithTokens = function (requestInfo) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, authToken, appCheckToken;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all([this._getAuthToken(), this._getAppCheckToken()])];\n\n          case 1:\n            _a = _b.sent(), authToken = _a[0], appCheckToken = _a[1];\n            return [2\n            /*return*/\n            , this._makeRequest(requestInfo, authToken, appCheckToken)];\n        }\n      });\n    });\n  };\n\n  return FirebaseStorageImpl;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns An UploadTask\r\n */\n\n\nfunction uploadBytesResumable(ref, data, metadata) {\n  ref = getModularInstance(ref);\n  return uploadBytesResumable$1(ref, data, metadata);\n}\n/**\r\n * A promise that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\n\n\nfunction getMetadata(ref) {\n  ref = getModularInstance(ref);\n  return getMetadata$1(ref);\n}\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A promise that resolves with the new metadata for this object.\r\n */\n\n\nfunction updateMetadata(ref, metadata) {\n  ref = getModularInstance(ref);\n  return updateMetadata$1(ref, metadata);\n}\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\n\n\nfunction list(ref, options) {\n  ref = getModularInstance(ref);\n  return list$1(ref, options);\n}\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\n\n\nfunction listAll(ref) {\n  ref = getModularInstance(ref);\n  return listAll$1(ref);\n}\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A promise that resolves with the download\r\n *     URL for this object.\r\n */\n\n\nfunction getDownloadURL(ref) {\n  ref = getModularInstance(ref);\n  return getDownloadURL$1(ref);\n}\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A promise that resolves if the deletion succeeds.\r\n */\n\n\nfunction deleteObject(ref) {\n  ref = getModularInstance(ref);\n  return deleteObject$1(ref);\n}\n\nfunction ref(serviceOrRef, pathOrUrl) {\n  serviceOrRef = getModularInstance(serviceOrRef);\n  return ref$1(serviceOrRef, pathOrUrl);\n}\n/**\r\n * @internal\r\n */\n\n\nfunction _getChild(ref, childPath) {\n  return _getChild$1(ref, childPath);\n}\n/**\r\n * Modify this `StorageService` instance to communicate with the Cloud Storage emulator.\r\n *\r\n * @param storage - The `StorageService` instance\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 5001)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules.\r\n * @public\r\n */\n\n\nfunction connectStorageEmulator(storage, host, port, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  connectStorageEmulator$1(storage, host, port, options);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar UploadTaskSnapshotCompat = function () {\n  function UploadTaskSnapshotCompat(_delegate, task, ref) {\n    this._delegate = _delegate;\n    this.task = task;\n    this.ref = ref;\n  }\n\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"bytesTransferred\", {\n    get: function () {\n      return this._delegate.bytesTransferred;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"metadata\", {\n    get: function () {\n      return this._delegate.metadata;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"state\", {\n    get: function () {\n      return this._delegate.state;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"totalBytes\", {\n    get: function () {\n      return this._delegate.totalBytes;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return UploadTaskSnapshotCompat;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar UploadTaskCompat = function () {\n  function UploadTaskCompat(_delegate, _ref) {\n    this._delegate = _delegate;\n    this._ref = _ref;\n    this.cancel = this._delegate.cancel.bind(this._delegate);\n    this.catch = this._delegate.catch.bind(this._delegate);\n    this.pause = this._delegate.pause.bind(this._delegate);\n    this.resume = this._delegate.resume.bind(this._delegate);\n  }\n\n  Object.defineProperty(UploadTaskCompat.prototype, \"snapshot\", {\n    get: function () {\n      return new UploadTaskSnapshotCompat(this._delegate.snapshot, this, this._ref);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  UploadTaskCompat.prototype.then = function (onFulfilled, onRejected) {\n    var _this = this;\n\n    return this._delegate.then(function (snapshot) {\n      if (onFulfilled) {\n        return onFulfilled(new UploadTaskSnapshotCompat(snapshot, _this, _this._ref));\n      }\n    }, onRejected);\n  };\n\n  UploadTaskCompat.prototype.on = function (type, nextOrObserver, error, completed) {\n    var _this = this;\n\n    var wrappedNextOrObserver = undefined;\n\n    if (!!nextOrObserver) {\n      if (typeof nextOrObserver === 'function') {\n        wrappedNextOrObserver = function (taskSnapshot) {\n          return nextOrObserver(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\n        };\n      } else {\n        wrappedNextOrObserver = {\n          next: !!nextOrObserver.next ? function (taskSnapshot) {\n            return nextOrObserver.next(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\n          } : undefined,\n          complete: nextOrObserver.complete || undefined,\n          error: nextOrObserver.error || undefined\n        };\n      }\n    }\n\n    return this._delegate.on(type, wrappedNextOrObserver, error || undefined, completed || undefined);\n  };\n\n  return UploadTaskCompat;\n}();\n\nvar ListResultCompat = function () {\n  function ListResultCompat(_delegate, _service) {\n    this._delegate = _delegate;\n    this._service = _service;\n  }\n\n  Object.defineProperty(ListResultCompat.prototype, \"prefixes\", {\n    get: function () {\n      var _this = this;\n\n      return this._delegate.prefixes.map(function (ref) {\n        return new ReferenceCompat(ref, _this._service);\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ListResultCompat.prototype, \"items\", {\n    get: function () {\n      var _this = this;\n\n      return this._delegate.items.map(function (ref) {\n        return new ReferenceCompat(ref, _this._service);\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ListResultCompat.prototype, \"nextPageToken\", {\n    get: function () {\n      return this._delegate.nextPageToken || null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ListResultCompat;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *  http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ReferenceCompat = function () {\n  function ReferenceCompat(_delegate, storage) {\n    this._delegate = _delegate;\n    this.storage = storage;\n  }\n\n  Object.defineProperty(ReferenceCompat.prototype, \"name\", {\n    get: function () {\n      return this._delegate.name;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceCompat.prototype, \"bucket\", {\n    get: function () {\n      return this._delegate.bucket;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceCompat.prototype, \"fullPath\", {\n    get: function () {\n      return this._delegate.fullPath;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ReferenceCompat.prototype.toString = function () {\n    return this._delegate.toString();\n  };\n  /**\r\n   * @returns A reference to the object obtained by\r\n   * appending childPath, removing any duplicate, beginning, or trailing\r\n   * slashes.\r\n   */\n\n\n  ReferenceCompat.prototype.child = function (childPath) {\n    var reference = _getChild(this._delegate, childPath);\n\n    return new ReferenceCompat(reference, this.storage);\n  };\n\n  Object.defineProperty(ReferenceCompat.prototype, \"root\", {\n    get: function () {\n      return new ReferenceCompat(this._delegate.root, this.storage);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceCompat.prototype, \"parent\", {\n    /**\r\n     * @returns A reference to the parent of the\r\n     * current object, or null if the current object is the root.\r\n     */\n    get: function () {\n      var reference = this._delegate.parent;\n\n      if (reference == null) {\n        return null;\n      }\n\n      return new ReferenceCompat(reference, this.storage);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Uploads a blob to this object's location.\r\n   * @param data - The blob to upload.\r\n   * @returns An UploadTask that lets you control and\r\n   * observe the upload.\r\n   */\n\n  ReferenceCompat.prototype.put = function (data, metadata) {\n    this._throwIfRoot('put');\n\n    return new UploadTaskCompat(uploadBytesResumable(this._delegate, data, metadata), this);\n  };\n  /**\r\n   * Uploads a string to this object's location.\r\n   * @param value - The string to upload.\r\n   * @param format - The format of the string to upload.\r\n   * @returns An UploadTask that lets you control and\r\n   * observe the upload.\r\n   */\n\n\n  ReferenceCompat.prototype.putString = function (value, format, metadata) {\n    if (format === void 0) {\n      format = StringFormat.RAW;\n    }\n\n    this._throwIfRoot('putString');\n\n    var data = dataFromString(format, value);\n\n    var metadataClone = __assign({}, metadata);\n\n    if (metadataClone['contentType'] == null && data.contentType != null) {\n      metadataClone['contentType'] = data.contentType;\n    }\n\n    return new UploadTaskCompat(new UploadTask(this._delegate, new FbsBlob(data.data, true), metadataClone), this);\n  };\n  /**\r\n   * List all items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * This is a helper method for calling list() repeatedly until there are\r\n   * no more results. The default pagination size is 1000.\r\n   *\r\n   * Note: The results may not be consistent if objects are changed while this\r\n   * operation is running.\r\n   *\r\n   * Warning: listAll may potentially consume too many resources if there are\r\n   * too many results.\r\n   *\r\n   * @returns A Promise that resolves with all the items and prefixes under\r\n   *  the current storage reference. `prefixes` contains references to\r\n   *  sub-directories and `items` contains references to objects in this\r\n   *  folder. `nextPageToken` is never returned.\r\n   */\n\n\n  ReferenceCompat.prototype.listAll = function () {\n    var _this = this;\n\n    return listAll(this._delegate).then(function (r) {\n      return new ListResultCompat(r, _this.storage);\n    });\n  };\n  /**\r\n   * List items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * List API is only available for Firebase Rules Version 2.\r\n   *\r\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n   * delimited folder structure. Refer to GCS's List API if you want to learn more.\r\n   *\r\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n   * support objects whose paths end with \"/\" or contain two consecutive\r\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n   * list() may fail if there are too many unsupported objects in the bucket.\r\n   *\r\n   * @param options - See ListOptions for details.\r\n   * @returns A Promise that resolves with the items and prefixes.\r\n   * `prefixes` contains references to sub-folders and `items`\r\n   * contains references to objects in this folder. `nextPageToken`\r\n   * can be used to get the rest of the results.\r\n   */\n\n\n  ReferenceCompat.prototype.list = function (options) {\n    var _this = this;\n\n    return list(this._delegate, options || undefined).then(function (r) {\n      return new ListResultCompat(r, _this.storage);\n    });\n  };\n  /**\r\n   * A promise that resolves with the metadata for this object. If this\r\n   * object doesn't exist or metadata cannot be retreived, the promise is\r\n   * rejected.\r\n   */\n\n\n  ReferenceCompat.prototype.getMetadata = function () {\n    return getMetadata(this._delegate);\n  };\n  /**\r\n   * Updates the metadata for this object.\r\n   * @param metadata - The new metadata for the object.\r\n   * Only values that have been explicitly set will be changed. Explicitly\r\n   * setting a value to null will remove the metadata.\r\n   * @returns A promise that resolves\r\n   * with the new metadata for this object.\r\n   * @see firebaseStorage.Reference.prototype.getMetadata\r\n   */\n\n\n  ReferenceCompat.prototype.updateMetadata = function (metadata) {\n    return updateMetadata(this._delegate, metadata);\n  };\n  /**\r\n   * @returns A promise that resolves with the download\r\n   * URL for this object.\r\n   */\n\n\n  ReferenceCompat.prototype.getDownloadURL = function () {\n    return getDownloadURL(this._delegate);\n  };\n  /**\r\n   * Deletes the object at this location.\r\n   * @returns A promise that resolves if the deletion succeeds.\r\n   */\n\n\n  ReferenceCompat.prototype.delete = function () {\n    this._throwIfRoot('delete');\n\n    return deleteObject(this._delegate);\n  };\n\n  ReferenceCompat.prototype._throwIfRoot = function (name) {\n    if (this._delegate._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n\n  return ReferenceCompat;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n */\n\n\nvar StorageServiceCompat = function () {\n  function StorageServiceCompat(app, _delegate) {\n    this.app = app;\n    this._delegate = _delegate;\n  }\n\n  Object.defineProperty(StorageServiceCompat.prototype, \"maxOperationRetryTime\", {\n    get: function () {\n      return this._delegate.maxOperationRetryTime;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StorageServiceCompat.prototype, \"maxUploadRetryTime\", {\n    get: function () {\n      return this._delegate.maxUploadRetryTime;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns a firebaseStorage.Reference for the given path in the default\r\n   * bucket.\r\n   */\n\n  StorageServiceCompat.prototype.ref = function (path) {\n    if (isUrl(path)) {\n      throw invalidArgument('ref() expected a child path but got a URL, use refFromURL instead.');\n    }\n\n    return new ReferenceCompat(ref(this._delegate, path), this);\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n   * which must be a gs:// or http[s]:// URL.\r\n   */\n\n\n  StorageServiceCompat.prototype.refFromURL = function (url) {\n    if (!isUrl(url)) {\n      throw invalidArgument('refFromURL() expected a full URL but got a child path, use ref() instead.');\n    }\n\n    try {\n      Location.makeFromUrl(url, this._delegate.host);\n    } catch (e) {\n      throw invalidArgument('refFromUrl() expected a valid full URL but got an invalid one.');\n    }\n\n    return new ReferenceCompat(ref(this._delegate, url), this);\n  };\n\n  StorageServiceCompat.prototype.setMaxUploadRetryTime = function (time) {\n    this._delegate.maxUploadRetryTime = time;\n  };\n\n  StorageServiceCompat.prototype.setMaxOperationRetryTime = function (time) {\n    this._delegate.maxOperationRetryTime = time;\n  };\n\n  StorageServiceCompat.prototype.useEmulator = function (host, port, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    connectStorageEmulator(this._delegate, host, port, options);\n  };\n\n  return StorageServiceCompat;\n}();\n\nvar name = \"@firebase/storage\";\nvar version = \"0.7.0\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Storage.\r\n */\n\nvar STORAGE_TYPE = 'storage';\n\nfunction factory(container, _a) {\n  var url = _a.instanceIdentifier; // Dependencies\n  // TODO: This should eventually be 'app-compat'\n\n  var app = container.getProvider('app').getImmediate();\n  var authProvider = container.getProvider('auth-internal');\n  var appCheckProvider = container.getProvider('app-check-internal'); // TODO: get StorageService instance from component framework instead\n  // of creating a new one.\n\n  var storageServiceCompat = new StorageServiceCompat(app, new FirebaseStorageImpl(app, authProvider, appCheckProvider, new ConnectionPool(), url, firebase.SDK_VERSION));\n  return storageServiceCompat;\n}\n\nfunction registerStorage(instance) {\n  var namespaceExports = {\n    // no-inline\n    TaskState: TaskState,\n    TaskEvent: TaskEvent,\n    StringFormat: StringFormat,\n    Storage: FirebaseStorageImpl,\n    Reference: ReferenceCompat\n  };\n  instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps(namespaceExports).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n}\n\nregisterStorage(firebase);\nexport { registerStorage };","map":{"version":3,"sources":["/home/neve/Documentos/projetos/tcc/poket-web/node_modules/@firebase/storage/dist/index.browser.esm.js"],"names":["firebase","__extends","__spreadArray","__awaiter","__generator","__assign","FirebaseError","createMockUserToken","getModularInstance","Component","DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","DEFAULT_MAX_OPERATION_RETRY_TIME","DEFAULT_MAX_UPLOAD_RETRY_TIME","FirebaseStorageError","_super","code","message","_this","call","prependCode","customData","serverResponse","_baseMessage","Object","setPrototypeOf","prototype","_codeEquals","defineProperty","get","set","enumerable","configurable","unknown","objectNotFound","path","quotaExceeded","bucket","unauthenticated","unauthorizedApp","unauthorized","retryLimitExceeded","canceled","invalidUrl","url","invalidDefaultBucket","noDefaultBucket","cannotSliceBlob","serverFileWrongSize","noDownloadURL","invalidArgument","appDeleted","invalidRootOperation","name","invalidFormat","format","internalError","decodeBase64","encoded","atob","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","StringData","data","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataURLBytes_","dataURLContentType_","value","b","i","length","c","charCodeAt","push","valid","hi","lo","Uint8Array","percentEncodedBytes_","decoded","decodeURIComponent","e","hasMinus","indexOf","hasUnder","invalidChar","hasPlus","hasSlash","replace","bytes","array","DataURLParts","dataURL","base64","matches","match","middle","endsWith","substring","rest","dataUrl","parts","s","end","longEnough","TaskEvent","STATE_CHANGED","TaskState","RUNNING","PAUSED","SUCCESS","CANCELED","ERROR","taskStateFromInternalTaskState","state","ErrorCode","XhrConnection","sent_","xhr_","XMLHttpRequest","errorCode_","NO_ERROR","sendPromise_","Promise","resolve","addEventListener","ABORT","NETWORK_ERROR","send","method","body","headers","open","undefined","key","hasOwnProperty","setRequestHeader","toString","getErrorCode","getStatus","status","getResponseText","responseText","abort","getResponseHeader","header","addUploadProgressListener","listener","upload","removeUploadProgressListener","removeEventListener","newConnection","ConnectionPool","createConnection","Location","path_","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","host","bucketLocation","makeFromUrl","location","bucketDomain","gsModify","loc","charAt","slice","gsPath","gsRegex","RegExp","gsIndices","httpModify","version","firebaseStorageHost","firebaseStoragePath","firebaseStorageRegExp","firebaseStorageIndices","cloudStorageHost","cloudStoragePath","cloudStorageRegExp","cloudStorageIndices","groups","regex","indices","postModify","group","captures","exec","bucketValue","pathValue","FailRequest","error","promise_","reject","getPromise","cancel","_appDelete","start","f","callback","timeout","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","args","_i","arguments","apply","callWithDelay","millis","setTimeout","handler","success","mustStop","waitMillis","Math","random","stopped","stop","wasTimeout","clearTimeout","id","isJustDef","p","isFunction","isNonArrayObject","Array","isArray","isString","String","isNativeBlob","isNativeBlobDefined","Blob","validateNumber","argument","minValue","maxValue","makeUrl","urlPart","protocolMatch","protocol","origin","makeQueryString","params","queryPart","nextPart","NetworkRequest","successCodes","additionalRetryCodes","errorCallback","progressCallback","pool","pendingConnection_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","pool_","resolve_","reject_","start_","self","doTheRequest","backoffCallback","RequestEndStatus","connection","progressListener","progressEvent","loaded","total","lengthComputable","then","hitServer","isRetryStatusCode_","wasCanceled","successCode","backoffDone","requestWentThrough","wasSuccessCode","result","err","appDelete","isFiveHundredCode","extraRetryCodes","isExtraRetryCode","isRequestSpecificRetryCode","addAuthHeader_","authToken","addVersionHeader_","firebaseVersion","addGmpidHeader_","appId","addAppCheckHeader_","appCheckToken","makeRequest","requestInfo","urlParams","assign","errorHandler","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob","bb","append","sliceBlob","blob","webkitSlice","mozSlice","FbsBlob","elideCopy","size","blobType","data_","type","ArrayBuffer","byteLength","size_","type_","startByte","endByte","realBlob","sliced","buffer","blobby","map","val","uint8Arrays","finalLength_1","forEach","merged_1","index_1","uploadData","jsonObjectOrNull","obj","JSON","parse","parent","index","lastIndexOf","newPath","child","childPath","canonicalChildPath","split","filter","component","join","lastComponent","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","xformPath","fullPath","getMappings","mappings","mappingsXformPath","_metadata","nameMapping","xformSize","Number","sizeMapping","addRef","service","generateRef","_makeStorageReference","fromResource","resource","len","mapping","fromResourceString","resourceString","downloadUrlFromResourceString","tokens","tokensList","urls","token","base","queryString","alt","toResourceString","stringify","PREFIXES_KEY","ITEMS_KEY","fromBackendResponse","listResult","prefixes","items","nextPageToken","_a","pathWithoutTrailingSlash","reference","_b","_c","item","fromResponseString","RequestInfo","handlerCheck","cndn","metadataHandler","xhr","text","listHandler","downloadUrlHandler","sharedErrorHandler","newErr","includes","objectErrorHandler","shared","getMetadata$2","maxOperationRetryTime","list$2","delimiter","pageToken","maxResults","isRoot","getDownloadUrl","updateMetadata$2","deleteObject$2","_xhr","_text","determineContentType_","metadataForUpload_","metadataClone","multipartUpload","genBoundary","str","boundary","metadata_","metadataString","preBlobPart","postBlobPart","maxUploadRetryTime","ResumableUploadStatus","current","finalized","checkResumeHeader_","allowed","allowedStatus","createResumableUpload","metadataForUpload","getResumableUploadStatus","sizeString","isNaN","RESUMABLE_UPLOAD_CHUNK_SIZE","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","min","uploadCommand","uploadStatus","newCurrent","Observer","nextOrObserver","complete","asFunctions","next","observer","async","argsToForward","UploadTask","ref","_transferred","_needToFetchStatus","_needToFetchMetadata","_observers","_error","_uploadUrl","_request","_chunkMultiplier","_resolve","_reject","_ref","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","completeTransitions_","_transition","_metadataErrorHandler","_promise","_start","_makeProgressCallback","sizeBefore","_updateProgress","_createResumable","_fetchStatus","_fetchMetadata","_continueUpload","_oneShotUpload","_resolveToken","all","storage","_getAuthToken","_getAppCheckToken","_location","createRequest","_makeRequest","statusRequest","uploadRequest","newStatus","_increaseMultiplier","currentSize","metadataRequest","multipartRequest","transferred","old","_notifyObservers","wasPaused","externalState","bytesTransferred","totalBytes","task","on","completed","_addObserver","_removeObserver","onFulfilled","onRejected","catch","_notifyObserver","splice","_finishPromise","observers","triggered","bind","snapshot","toCall","resume","pause","Reference","_service","_newRef","_throwIfRoot","uploadBytesResumable$1","listAll$1","accumulator","listAllHelper","opt","nextPage","label","list$1","sent","options","op","makeRequestWithTokens","getMetadata$1","updateMetadata$1","getDownloadURL$1","deleteObject$1","_getChild$1","isUrl","test","refFromURL","refFromPath","FirebaseStorageImpl","_bucket","ref$1","serviceOrRef","pathOrUrl","extractBucket","config","connectStorageEmulator$1","port","mockUserToken","_overrideAuthToken","app","projectId","_authProvider","_appCheckProvider","_pool","_url","_firebaseVersion","_host","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","Set","time","POSITIVE_INFINITY","auth","tokenData","getImmediate","optional","getToken","accessToken","appCheck","_delete","request","clear","request_1","add","delete","uploadBytesResumable","getMetadata","updateMetadata","list","listAll","getDownloadURL","deleteObject","_getChild","connectStorageEmulator","UploadTaskSnapshotCompat","_delegate","UploadTaskCompat","wrappedNextOrObserver","taskSnapshot","ListResultCompat","ReferenceCompat","root","put","putString","r","StorageServiceCompat","setMaxUploadRetryTime","setMaxOperationRetryTime","useEmulator","STORAGE_TYPE","factory","container","instanceIdentifier","getProvider","authProvider","appCheckProvider","storageServiceCompat","SDK_VERSION","registerStorage","instance","namespaceExports","Storage","INTERNAL","registerComponent","setServiceProps","setMultipleInstances","registerVersion"],"mappings":"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;;;AACA,SAASwC,oBAAT,CAA8BxI,GAA9B,EAAmCza,IAAnC,EAAyCmT,QAAzC,EAAmD;AAC/CsH,EAAAA,GAAG,GAAGne,kBAAkB,CAACme,GAAD,CAAxB;AACA,SAAO2E,sBAAsB,CAAC3E,GAAD,EAAMza,IAAN,EAAYmT,QAAZ,CAA7B;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS+P,WAAT,CAAqBzI,GAArB,EAA0B;AACtBA,EAAAA,GAAG,GAAGne,kBAAkB,CAACme,GAAD,CAAxB;AACA,SAAOuF,aAAa,CAACvF,GAAD,CAApB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS0I,cAAT,CAAwB1I,GAAxB,EAA6BtH,QAA7B,EAAuC;AACnCsH,EAAAA,GAAG,GAAGne,kBAAkB,CAACme,GAAD,CAAxB;AACA,SAAOwF,gBAAgB,CAACxF,GAAD,EAAMtH,QAAN,CAAvB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASiQ,IAAT,CAAc3I,GAAd,EAAmBoF,OAAnB,EAA4B;AACxBpF,EAAAA,GAAG,GAAGne,kBAAkB,CAACme,GAAD,CAAxB;AACA,SAAOkF,MAAM,CAAClF,GAAD,EAAMoF,OAAN,CAAb;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASwD,OAAT,CAAiB5I,GAAjB,EAAsB;AAClBA,EAAAA,GAAG,GAAGne,kBAAkB,CAACme,GAAD,CAAxB;AACA,SAAO4E,SAAS,CAAC5E,GAAD,CAAhB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS6I,cAAT,CAAwB7I,GAAxB,EAA6B;AACzBA,EAAAA,GAAG,GAAGne,kBAAkB,CAACme,GAAD,CAAxB;AACA,SAAOyF,gBAAgB,CAACzF,GAAD,CAAvB;AACH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","sourcesContent":["import firebase from '@firebase/app';\nimport { __extends, __spreadArray, __awaiter, __generator, __assign } from 'tslib';\nimport { FirebaseError, createMockUserToken, getModularInstance } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\r\n * An error returned by the Firebase Storage SDK.\r\n * @public\r\n */\r\nvar FirebaseStorageError = /** @class */ (function (_super) {\r\n    __extends(FirebaseStorageError, _super);\r\n    /**\r\n     * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\r\n     *  added to the end of the message.\r\n     * @param message  - Error message.\r\n     */\r\n    function FirebaseStorageError(code, message) {\r\n        var _this = _super.call(this, prependCode(code), \"Firebase Storage: \" + message + \" (\" + prependCode(code) + \")\") || this;\r\n        /**\r\n         * Stores custom error data unque to FirebaseStorageError.\r\n         */\r\n        _this.customData = { serverResponse: null };\r\n        _this._baseMessage = _this.message;\r\n        // Without this, `instanceof FirebaseStorageError`, in tests for example,\r\n        // returns false.\r\n        Object.setPrototypeOf(_this, FirebaseStorageError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Compares a StorageErrorCode against this error's code, filtering out the prefix.\r\n     */\r\n    FirebaseStorageError.prototype._codeEquals = function (code) {\r\n        return prependCode(code) === this.code;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        /**\r\n         * Optional response message that was added by the server.\r\n         */\r\n        get: function () {\r\n            return this.customData.serverResponse;\r\n        },\r\n        set: function (serverResponse) {\r\n            this.customData.serverResponse = serverResponse;\r\n            if (this.customData.serverResponse) {\r\n                this.message = this._baseMessage + \"\\n\" + this.customData.serverResponse;\r\n            }\r\n            else {\r\n                this.message = this._baseMessage;\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}(FirebaseError));\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new FirebaseStorageError(\"unknown\" /* UNKNOWN */, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new FirebaseStorageError(\"object-not-found\" /* OBJECT_NOT_FOUND */, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new FirebaseStorageError(\"quota-exceeded\" /* QUOTA_EXCEEDED */, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new FirebaseStorageError(\"unauthenticated\" /* UNAUTHENTICATED */, message);\r\n}\r\nfunction unauthorizedApp() {\r\n    return new FirebaseStorageError(\"unauthorized-app\" /* UNAUTHORIZED_APP */, 'This app does not have permission to access Firebase Storage on this project.');\r\n}\r\nfunction unauthorized(path) {\r\n    return new FirebaseStorageError(\"unauthorized\" /* UNAUTHORIZED */, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new FirebaseStorageError(\"retry-limit-exceeded\" /* RETRY_LIMIT_EXCEEDED */, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new FirebaseStorageError(\"canceled\" /* CANCELED */, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new FirebaseStorageError(\"invalid-url\" /* INVALID_URL */, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new FirebaseStorageError(\"invalid-default-bucket\" /* INVALID_DEFAULT_BUCKET */, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction noDefaultBucket() {\r\n    return new FirebaseStorageError(\"no-default-bucket\" /* NO_DEFAULT_BUCKET */, 'No default bucket ' +\r\n        \"found. Did you set the '\" +\r\n        CONFIG_STORAGE_BUCKET_KEY +\r\n        \"' property when initializing the app?\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new FirebaseStorageError(\"cannot-slice-blob\" /* CANNOT_SLICE_BLOB */, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new FirebaseStorageError(\"server-file-wrong-size\" /* SERVER_FILE_WRONG_SIZE */, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new FirebaseStorageError(\"no-download-url\" /* NO_DOWNLOAD_URL */, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(message) {\r\n    return new FirebaseStorageError(\"invalid-argument\" /* INVALID_ARGUMENT */, message);\r\n}\r\nfunction appDeleted() {\r\n    return new FirebaseStorageError(\"app-deleted\" /* APP_DELETED */, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name - The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new FirebaseStorageError(\"invalid-root-operation\" /* INVALID_ROOT_OPERATION */, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new FirebaseStorageError(\"invalid-format\" /* INVALID_FORMAT */, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message - A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new FirebaseStorageError(\"internal-error\" /* INTERNAL_ERROR */, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Converts a Base64 encoded string to a binary string. */\r\nfunction decodeBase64(encoded) {\r\n    return atob(encoded);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An enumeration of the possible string formats for upload.\r\n * @public\r\n */\r\nvar StringFormat = {\r\n    /**\r\n     * Indicates the string should be interpreted \"raw\", that is, as normal text.\r\n     * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\r\n     * sequence.\r\n     * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\r\n     * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\r\n     */\r\n    RAW: 'raw',\r\n    /**\r\n     * Indicates the string should be interpreted as base64-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64: 'base64',\r\n    /**\r\n     * Indicates the string should be interpreted as base64url-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64URL: 'base64url',\r\n    /**\r\n     * Indicates the string is a data URL, such as one obtained from\r\n     * canvas.toDataURL().\r\n     * Example: the string 'data:application/octet-stream;base64,aaaa'\r\n     * becomes the byte sequence\r\n     * 69 a6 9a\r\n     * (the content-type \"application/octet-stream\" is also applied, but can\r\n     * be overridden in the metadata object).\r\n     */\r\n    DATA_URL: 'data_url'\r\n};\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    var b = [];\r\n    for (var i = 0; i < value.length; i++) {\r\n        var c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = value.indexOf('-') !== -1;\r\n            var hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = value.indexOf('+') !== -1;\r\n            var hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        // do nothing\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = decodeBase64(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An event that is triggered on a task.\r\n */\r\nvar TaskEvent = {\r\n    /**\r\n     * For this event,\r\n     * <ul>\r\n     *   <li>The `next` function is triggered on progress updates and when the\r\n     *       task is paused/resumed with an `UploadTaskSnapshot` as the first\r\n     *       argument.</li>\r\n     *   <li>The `error` function is triggered if the upload is canceled or fails\r\n     *       for another reason.</li>\r\n     *   <li>The `complete` function is triggered if the upload completes\r\n     *       successfully.</li>\r\n     * </ul>\r\n     */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\n/**\r\n * Represents the current state of a running upload.\r\n */\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case \"running\" /* RUNNING */:\r\n        case \"pausing\" /* PAUSING */:\r\n        case \"canceling\" /* CANCELING */:\r\n            return TaskState.RUNNING;\r\n        case \"paused\" /* PAUSED */:\r\n            return TaskState.PAUSED;\r\n        case \"success\" /* SUCCESS */:\r\n            return TaskState.SUCCESS;\r\n        case \"canceled\" /* CANCELED */:\r\n            return TaskState.CANCELED;\r\n        case \"error\" /* ERROR */:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Error codes for requests made by the the XhrIo wrapper.\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\r\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\r\n */\r\nvar XhrConnection = /** @class */ (function () {\r\n    function XhrConnection() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(function (resolve) {\r\n            _this.xhr_.addEventListener('abort', function () {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve();\r\n            });\r\n            _this.xhr_.addEventListener('error', function () {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve();\r\n            });\r\n            _this.xhr_.addEventListener('load', function () {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.send = function (url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (headers !== undefined) {\r\n            for (var key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (body !== undefined) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.addUploadProgressListener = function (listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.removeUploadProgressListener = function (listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return XhrConnection;\r\n}());\r\nfunction newConnection() {\r\n    return new XhrConnection();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar ConnectionPool = /** @class */ (function () {\r\n    function ConnectionPool() {\r\n    }\r\n    ConnectionPool.prototype.createConnection = function () {\r\n        return newConnection();\r\n    };\r\n    return ConnectionPool;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Firebase Storage location data.\r\n *\r\n * @internal\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Location.prototype, \"isRoot\", {\r\n        get: function () {\r\n            return this.path.length === 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString, host) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString, host);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url, host) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\r\n        var firebaseStoragePath = '(/([^?#]*).*)?$';\r\n        var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\r\n        var firebaseStorageIndices = { bucket: 1, path: 3 };\r\n        var cloudStorageHost = host === DEFAULT_HOST\r\n            ? '(?:storage.googleapis.com|storage.cloud.google.com)'\r\n            : host;\r\n        var cloudStoragePath = '([^?#]*)';\r\n        var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\r\n        var cloudStorageIndices = { bucket: 1, path: 2 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            {\r\n                regex: firebaseStorageRegExp,\r\n                indices: firebaseStorageIndices,\r\n                postModify: httpModify\r\n            },\r\n            {\r\n                regex: cloudStorageRegExp,\r\n                indices: cloudStorageIndices,\r\n                postModify: httpModify\r\n            }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (_appDelete) {\r\n    };\r\n    return FailRequest;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ncallback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    function triggerCallback() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    function handler(success) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArray([null, success], args));\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArray([null, success], args));\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return typeof p === 'object' && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\r\nfunction validateNumber(argument, minValue, maxValue, value) {\r\n    if (value < minValue) {\r\n        throw invalidArgument(\"Invalid value for '\" + argument + \"'. Expected \" + minValue + \" or greater.\");\r\n    }\r\n    if (value > maxValue) {\r\n        throw invalidArgument(\"Invalid value for '\" + argument + \"'. Expected \" + maxValue + \" or less.\");\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart, host) {\r\n    var protocolMatch = host.match(/^(\\w+):\\/\\/.+/);\r\n    var protocol = protocolMatch === null || protocolMatch === void 0 ? void 0 : protocolMatch[1];\r\n    var origin = host;\r\n    if (protocol == null) {\r\n        origin = \"https://\" + host;\r\n    }\r\n    return origin + \"/v0\" + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    for (var key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            var nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        var _this = this;\r\n        this.pendingConnection_ = null;\r\n        this.backoffId_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled) {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var connection = self.pool_.createConnection();\r\n            self.pendingConnection_ = connection;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                connection.addUploadProgressListener(progressListener);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            connection\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function () {\r\n                if (self.progressCallback_ !== null) {\r\n                    connection.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingConnection_ = null;\r\n                var hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = connection.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = self.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, connection));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough - True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve = self.resolve_;\r\n            var reject = self.reject_;\r\n            var connection = status.connection;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(connection, connection.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (connection !== null) {\r\n                    var err = unknown();\r\n                    err.serverResponse = connection.getResponseText();\r\n                    if (self.errorCallback_) {\r\n                        reject(self.errorCallback_(connection, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_ ? appDeleted() : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingConnection_ !== null) {\r\n            this.pendingConnection_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n        var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, connection, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.connection = connection;\r\n        this.canceled = !!canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers, firebaseVersion) {\r\n    headers['X-Firebase-Storage-Version'] =\r\n        'webjs/' + (firebaseVersion !== null && firebaseVersion !== void 0 ? firebaseVersion : 'AppManager');\r\n}\r\nfunction addGmpidHeader_(headers, appId) {\r\n    if (appId) {\r\n        headers['X-Firebase-GMPID'] = appId;\r\n    }\r\n}\r\nfunction addAppCheckHeader_(headers, appCheckToken) {\r\n    if (appCheckToken !== null) {\r\n        headers['X-Firebase-AppCheck'] = appCheckToken;\r\n    }\r\n}\r\nfunction makeRequest(requestInfo, appId, authToken, appCheckToken, pool, firebaseVersion) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = Object.assign({}, requestInfo.headers);\r\n    addGmpidHeader_(headers, appId);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers, firebaseVersion);\r\n    addAppCheckHeader_(headers, appCheckToken);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw new FirebaseStorageError(\"unsupported-environment\" /* UNSUPPORTED_ENVIRONMENT */, \"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n *\r\n * @internal\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) { return component.length > 0; })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (size !== undefined) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, service) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return service._makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(service, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, service);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(service, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(service, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString, host) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    var tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    var encode = encodeURIComponent;\r\n    var tokensList = tokens.split(',');\r\n    var urls = tokensList.map(function (token) {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        var base = makeUrl(urlPart, host);\r\n        var queryString = makeQueryString({\r\n            alt: 'media',\r\n            token: token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PREFIXES_KEY = 'prefixes';\r\nvar ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(service, bucket, resource) {\r\n    var listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            var reference = service._makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\r\n            var item = _c[_b];\r\n            var reference = service._makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(service, bucket, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromBackendResponse(service, bucket, resource);\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(service, bucket) {\r\n    function handler(xhr, text) {\r\n        var listResult = fromResponseString(service, bucket, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text, service.host);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            if (\r\n            // This exact message string is the only consistent part of the\r\n            // server's error response that identifies it as an App Check error.\r\n            xhr.getResponseText().includes('Firebase App Check token is invalid')) {\r\n                newErr = unauthorizedApp();\r\n            }\r\n            else {\r\n                newErr = unauthenticated();\r\n            }\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata$2(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list$2(service, location, delimiter, pageToken, maxResults) {\r\n    var urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata$2(service, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject$2(service, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'DELETE';\r\n    var timeout = service.maxOperationRetryTime;\r\n    function handler(_xhr, _text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    var metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\n/**\r\n * Prepare RequestInfo for uploads as Content-Type: multipart.\r\n */\r\nfunction multipartUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str = str + Math.random().toString().slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata_ = metadataForUpload_(location, blob, metadata);\r\n    var metadataString = toResourceString(metadata_, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata_['fullPath'] };\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    var status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    var urlParams = { name: metadataForUpload['fullPath'] };\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': \"\" + blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadataForUpload, mappings);\r\n    var timeout = service.maxUploadRetryTime;\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(service, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        var size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar RESUMABLE_UPLOAD_CHUNK_SIZE = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status_.total - status_.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status_.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': \"\" + status_.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status_.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(service, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, error, complete) {\r\n        var asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error;\r\n            this.complete = complete;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next;\r\n            this.error = observer.error;\r\n            this.complete = observer.complete;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(function () { return f.apply(void 0, argsToForward); });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n * @internal\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref - The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob - The blob to upload.\r\n     */\r\n    function UploadTask(ref, blob, metadata) {\r\n        var _this = this;\r\n        if (metadata === void 0) { metadata = null; }\r\n        /**\r\n         * Number of bytes transferred so far.\r\n         */\r\n        this._transferred = 0;\r\n        this._needToFetchStatus = false;\r\n        this._needToFetchMetadata = false;\r\n        this._observers = [];\r\n        this._error = undefined;\r\n        this._uploadUrl = undefined;\r\n        this._request = undefined;\r\n        this._chunkMultiplier = 1;\r\n        this._resolve = undefined;\r\n        this._reject = undefined;\r\n        this._ref = ref;\r\n        this._blob = blob;\r\n        this._metadata = metadata;\r\n        this._mappings = getMappings();\r\n        this._resumable = this._shouldDoResumable(this._blob);\r\n        this._state = \"running\" /* RUNNING */;\r\n        this._errorHandler = function (error) {\r\n            _this._request = undefined;\r\n            _this._chunkMultiplier = 1;\r\n            if (error._codeEquals(\"canceled\" /* CANCELED */)) {\r\n                _this._needToFetchStatus = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this._error = error;\r\n                _this._transition(\"error\" /* ERROR */);\r\n            }\r\n        };\r\n        this._metadataErrorHandler = function (error) {\r\n            _this._request = undefined;\r\n            if (error._codeEquals(\"canceled\" /* CANCELED */)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this._error = error;\r\n                _this._transition(\"error\" /* ERROR */);\r\n            }\r\n        };\r\n        this._promise = new Promise(function (resolve, reject) {\r\n            _this._resolve = resolve;\r\n            _this._reject = reject;\r\n            _this._start();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this._promise.then(null, function () { });\r\n    }\r\n    UploadTask.prototype._makeProgressCallback = function () {\r\n        var _this = this;\r\n        var sizeBefore = this._transferred;\r\n        return function (loaded) { return _this._updateProgress(sizeBefore + loaded); };\r\n    };\r\n    UploadTask.prototype._shouldDoResumable = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype._start = function () {\r\n        if (this._state !== \"running\" /* RUNNING */) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this._request !== undefined) {\r\n            return;\r\n        }\r\n        if (this._resumable) {\r\n            if (this._uploadUrl === undefined) {\r\n                this._createResumable();\r\n            }\r\n            else {\r\n                if (this._needToFetchStatus) {\r\n                    this._fetchStatus();\r\n                }\r\n                else {\r\n                    if (this._needToFetchMetadata) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this._fetchMetadata();\r\n                    }\r\n                    else {\r\n                        this._continueUpload();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._oneShotUpload();\r\n        }\r\n    };\r\n    UploadTask.prototype._resolveToken = function (callback) {\r\n        var _this = this;\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.all([\r\n            this._ref.storage._getAuthToken(),\r\n            this._ref.storage._getAppCheckToken()\r\n        ]).then(function (_a) {\r\n            var authToken = _a[0], appCheckToken = _a[1];\r\n            switch (_this._state) {\r\n                case \"running\" /* RUNNING */:\r\n                    callback(authToken, appCheckToken);\r\n                    break;\r\n                case \"canceling\" /* CANCELING */:\r\n                    _this._transition(\"canceled\" /* CANCELED */);\r\n                    break;\r\n                case \"pausing\" /* PAUSING */:\r\n                    _this._transition(\"paused\" /* PAUSED */);\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype._createResumable = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken, appCheckToken) {\r\n            var requestInfo = createResumableUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\r\n            var createRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\r\n            _this._request = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this._request = undefined;\r\n                _this._uploadUrl = url;\r\n                _this._needToFetchStatus = false;\r\n                _this.completeTransitions_();\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._fetchStatus = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this._uploadUrl;\r\n        this._resolveToken(function (authToken, appCheckToken) {\r\n            var requestInfo = getResumableUploadStatus(_this._ref.storage, _this._ref._location, url, _this._blob);\r\n            var statusRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\r\n            _this._request = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this._request = undefined;\r\n                _this._updateProgress(status.current);\r\n                _this._needToFetchStatus = false;\r\n                if (status.finalized) {\r\n                    _this._needToFetchMetadata = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._continueUpload = function () {\r\n        var _this = this;\r\n        var chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        var status = new ResumableUploadStatus(this._transferred, this._blob.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this._uploadUrl;\r\n        this._resolveToken(function (authToken, appCheckToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this._ref._location, _this._ref.storage, url, _this._blob, chunkSize, _this._mappings, status, _this._makeProgressCallback());\r\n            }\r\n            catch (e) {\r\n                _this._error = e;\r\n                _this._transition(\"error\" /* ERROR */);\r\n                return;\r\n            }\r\n            var uploadRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\r\n            _this._request = uploadRequest;\r\n            uploadRequest.getPromise().then(function (newStatus) {\r\n                _this._increaseMultiplier();\r\n                _this._request = undefined;\r\n                _this._updateProgress(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this._metadata = newStatus.metadata;\r\n                    _this._transition(\"success\" /* SUCCESS */);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._increaseMultiplier = function () {\r\n        var currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this._chunkMultiplier *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype._fetchMetadata = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken, appCheckToken) {\r\n            var requestInfo = getMetadata$2(_this._ref.storage, _this._ref._location, _this._mappings);\r\n            var metadataRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\r\n            _this._request = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this._request = undefined;\r\n                _this._metadata = metadata;\r\n                _this._transition(\"success\" /* SUCCESS */);\r\n            }, _this._metadataErrorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._oneShotUpload = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken, appCheckToken) {\r\n            var requestInfo = multipartUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\r\n            var multipartRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\r\n            _this._request = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this._request = undefined;\r\n                _this._metadata = metadata;\r\n                _this._updateProgress(_this._blob.size());\r\n                _this._transition(\"success\" /* SUCCESS */);\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._updateProgress = function (transferred) {\r\n        var old = this._transferred;\r\n        this._transferred = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this._transferred !== old) {\r\n            this._notifyObservers();\r\n        }\r\n    };\r\n    UploadTask.prototype._transition = function (state) {\r\n        if (this._state === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case \"canceling\" /* CANCELING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case \"pausing\" /* PAUSING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case \"running\" /* RUNNING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this._state === \"paused\" /* PAUSED */;\r\n                this._state = state;\r\n                if (wasPaused) {\r\n                    this._notifyObservers();\r\n                    this._start();\r\n                }\r\n                break;\r\n            case \"paused\" /* PAUSED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"canceled\" /* CANCELED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._error = canceled();\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"error\" /* ERROR */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"success\" /* SUCCESS */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this._state) {\r\n            case \"pausing\" /* PAUSING */:\r\n                this._transition(\"paused\" /* PAUSED */);\r\n                break;\r\n            case \"canceling\" /* CANCELING */:\r\n                this._transition(\"canceled\" /* CANCELED */);\r\n                break;\r\n            case \"running\" /* RUNNING */:\r\n                this._start();\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        /**\r\n         * A snapshot of the current task state.\r\n         */\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this._state);\r\n            return {\r\n                bytesTransferred: this._transferred,\r\n                totalBytes: this._blob.size(),\r\n                state: externalState,\r\n                metadata: this._metadata,\r\n                task: this,\r\n                ref: this._ref\r\n            };\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type - The type of event to listen for.\r\n     * @param nextOrObserver -\r\n     *     The `next` function, which gets called for each item in\r\n     *     the event stream, or an observer object with some or all of these three\r\n     *     properties (`next`, `error`, `complete`).\r\n     * @param error - A function that gets called with a `FirebaseStorageError`\r\n     *     if the event stream ends due to an error.\r\n     * @param completed - A function that gets called if the\r\n     *     event stream ends normally.\r\n     * @returns\r\n     *     If only the event argument is passed, returns a function you can use to\r\n     *     add callbacks (see the examples above). If more than just the event\r\n     *     argument is passed, returns a function you can call to unregister the\r\n     *     callbacks.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        var _this = this;\r\n        var observer = new Observer(nextOrObserver, error, completed);\r\n        this._addObserver(observer);\r\n        return function () {\r\n            _this._removeObserver(observer);\r\n        };\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected - The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this._promise.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype._addObserver = function (observer) {\r\n        this._observers.push(observer);\r\n        this._notifyObserver(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype._removeObserver = function (observer) {\r\n        var i = this._observers.indexOf(observer);\r\n        if (i !== -1) {\r\n            this._observers.splice(i, 1);\r\n        }\r\n    };\r\n    UploadTask.prototype._notifyObservers = function () {\r\n        var _this = this;\r\n        this._finishPromise();\r\n        var observers = this._observers.slice();\r\n        observers.forEach(function (observer) {\r\n            _this._notifyObserver(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype._finishPromise = function () {\r\n        if (this._resolve !== undefined) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this._state)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this._resolve.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this._reject;\r\n                    async(toCall.bind(null, this._error))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this._resolve = undefined;\r\n                this._reject = undefined;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype._notifyObserver = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this._state);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        var valid = this._state === \"paused\" /* PAUSED */ ||\r\n            this._state === \"pausing\" /* PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"running\" /* RUNNING */);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        var valid = this._state === \"running\" /* RUNNING */;\r\n        if (valid) {\r\n            this._transition(\"pausing\" /* PAUSING */);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        var valid = this._state === \"running\" /* RUNNING */ ||\r\n            this._state === \"pausing\" /* PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"canceling\" /* CANCELING */);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @internal\r\n * @param _location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(_service, location) {\r\n        this._service = _service;\r\n        if (location instanceof Location) {\r\n            this._location = location;\r\n        }\r\n        else {\r\n            this._location = Location.makeFromUrl(location, _service.host);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        return 'gs://' + this._location.bucket + '/' + this._location.path;\r\n    };\r\n    Reference.prototype._newRef = function (service, location) {\r\n        return new Reference(service, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * A reference to the root of this object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this._location.bucket, '');\r\n            return this._newRef(this._service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        /**\r\n         * The name of the bucket containing this reference's object.\r\n         */\r\n        get: function () {\r\n            return this._location.bucket;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        /**\r\n         * The full path of this object.\r\n         */\r\n        get: function () {\r\n            return this._location.path;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        /**\r\n         * The short name of this object, which is the last component of the full path.\r\n         * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\r\n         */\r\n        get: function () {\r\n            return lastComponent(this._location.path);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        /**\r\n         * The `StorageService` instance this `StorageReference` is associated with.\r\n         */\r\n        get: function () {\r\n            return this._service;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        /**\r\n         * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\r\n         * this reference is the root.\r\n         */\r\n        get: function () {\r\n            var newPath = parent(this._location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this._location.bucket, newPath);\r\n            return new Reference(this._service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Utility function to throw an error in methods that do not accept a root reference.\r\n     */\r\n    Reference.prototype._throwIfRoot = function (name) {\r\n        if (this._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable$1(ref, data, metadata) {\r\n    ref._throwIfRoot('uploadBytesResumable');\r\n    return new UploadTask(ref, new FbsBlob(data), metadata);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll$1(ref) {\r\n    var accumulator = {\r\n        prefixes: [],\r\n        items: []\r\n    };\r\n    return listAllHelper(ref, accumulator).then(function () { return accumulator; });\r\n}\r\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\r\nfunction listAllHelper(ref, accumulator, pageToken) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var opt, nextPage;\r\n        var _a, _b;\r\n        return __generator(this, function (_c) {\r\n            switch (_c.label) {\r\n                case 0:\r\n                    opt = {\r\n                        // maxResults is 1000 by default.\r\n                        pageToken: pageToken\r\n                    };\r\n                    return [4 /*yield*/, list$1(ref, opt)];\r\n                case 1:\r\n                    nextPage = _c.sent();\r\n                    (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\r\n                    (_b = accumulator.items).push.apply(_b, nextPage.items);\r\n                    if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, listAllHelper(ref, accumulator, nextPage.nextPageToken)];\r\n                case 2:\r\n                    _c.sent();\r\n                    _c.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list$1(ref, options) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var op, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (options != null) {\r\n                        if (typeof options.maxResults === 'number') {\r\n                            validateNumber('options.maxResults', \r\n                            /* minValue= */ 1, \r\n                            /* maxValue= */ 1000, options.maxResults);\r\n                        }\r\n                    }\r\n                    op = options || {};\r\n                    requestInfo = list$2(ref.storage, ref._location, \r\n                    /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n                    return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\r\n                case 1: return [2 /*return*/, (_a.sent()).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * A promise that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\r\nfunction getMetadata$1(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('getMetadata');\r\n                    requestInfo = getMetadata$2(ref.storage, ref._location, getMappings());\r\n                    return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\r\n                case 1: return [2 /*return*/, (_a.sent()).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A promise that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\r\nfunction updateMetadata$1(ref, metadata) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('updateMetadata');\r\n                    requestInfo = updateMetadata$2(ref.storage, ref._location, metadata, getMappings());\r\n                    return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\r\n                case 1: return [2 /*return*/, (_a.sent()).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A promise that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL$1(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('getDownloadURL');\r\n                    requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\r\n                    return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\r\n                case 1: return [2 /*return*/, (_a.sent())\r\n                        .getPromise()\r\n                        .then(function (url) {\r\n                        if (url === null) {\r\n                            throw noDownloadURL();\r\n                        }\r\n                        return url;\r\n                    })];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A promise that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject$1(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('deleteObject');\r\n                    requestInfo = deleteObject$2(ref.storage, ref._location);\r\n                    return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\r\n                case 1: return [2 /*return*/, (_a.sent()).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n *\r\n * @param ref - StorageReference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n *\r\n */\r\nfunction _getChild$1(ref, childPath) {\r\n    var newPath = child(ref._location.path, childPath);\r\n    var location = new Location(ref._location.bucket, newPath);\r\n    return new Reference(ref.storage, location);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isUrl(path) {\r\n    return /^[A-Za-z]+:\\/\\//.test(path);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\r\nfunction refFromURL(service, url) {\r\n    return new Reference(service, url);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\r\nfunction refFromPath(ref, path) {\r\n    if (ref instanceof FirebaseStorageImpl) {\r\n        var service = ref;\r\n        if (service._bucket == null) {\r\n            throw noDefaultBucket();\r\n        }\r\n        var reference = new Reference(service, service._bucket);\r\n        if (path != null) {\r\n            return refFromPath(reference, path);\r\n        }\r\n        else {\r\n            return reference;\r\n        }\r\n    }\r\n    else {\r\n        // ref is a Reference\r\n        if (path !== undefined) {\r\n            return _getChild$1(ref, path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    }\r\n}\r\nfunction ref$1(serviceOrRef, pathOrUrl) {\r\n    if (pathOrUrl && isUrl(pathOrUrl)) {\r\n        if (serviceOrRef instanceof FirebaseStorageImpl) {\r\n            return refFromURL(serviceOrRef, pathOrUrl);\r\n        }\r\n        else {\r\n            throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\r\n        }\r\n    }\r\n    else {\r\n        return refFromPath(serviceOrRef, pathOrUrl);\r\n    }\r\n}\r\nfunction extractBucket(host, config) {\r\n    var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\r\n    if (bucketString == null) {\r\n        return null;\r\n    }\r\n    return Location.makeFromBucketSpec(bucketString, host);\r\n}\r\nfunction connectStorageEmulator$1(storage, host, port, options) {\r\n    if (options === void 0) { options = {}; }\r\n    storage.host = \"http://\" + host + \":\" + port;\r\n    var mockUserToken = options.mockUserToken;\r\n    if (mockUserToken) {\r\n        storage._overrideAuthToken =\r\n            typeof mockUserToken === 'string'\r\n                ? mockUserToken\r\n                : createMockUserToken(mockUserToken, storage.app.options.projectId);\r\n    }\r\n}\r\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @public\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n */\r\nvar FirebaseStorageImpl = /** @class */ (function () {\r\n    function FirebaseStorageImpl(\r\n    /**\r\n     * FirebaseApp associated with this StorageService instance.\r\n     */\r\n    app, _authProvider, \r\n    /**\r\n     * @internal\r\n     */\r\n    _appCheckProvider, \r\n    /**\r\n     * @internal\r\n     */\r\n    _pool, _url, _firebaseVersion) {\r\n        this.app = app;\r\n        this._authProvider = _authProvider;\r\n        this._appCheckProvider = _appCheckProvider;\r\n        this._pool = _pool;\r\n        this._url = _url;\r\n        this._firebaseVersion = _firebaseVersion;\r\n        this._bucket = null;\r\n        /**\r\n         * This string can be in the formats:\r\n         * - host\r\n         * - host:port\r\n         * - protocol://host:port\r\n         */\r\n        this._host = DEFAULT_HOST;\r\n        this._appId = null;\r\n        this._deleted = false;\r\n        this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this._requests = new Set();\r\n        if (_url != null) {\r\n            this._bucket = Location.makeFromBucketSpec(_url, this._host);\r\n        }\r\n        else {\r\n            this._bucket = extractBucket(this._host, this.app.options);\r\n        }\r\n    }\r\n    Object.defineProperty(FirebaseStorageImpl.prototype, \"host\", {\r\n        get: function () {\r\n            return this._host;\r\n        },\r\n        /**\r\n         * Set host string for this service.\r\n         * @param host - host string in the form of host, host:port,\r\n         * or protocol://host:port\r\n         */\r\n        set: function (host) {\r\n            this._host = host;\r\n            if (this._url != null) {\r\n                this._bucket = Location.makeFromBucketSpec(this._url, host);\r\n            }\r\n            else {\r\n                this._bucket = extractBucket(host, this.app.options);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageImpl.prototype, \"maxUploadRetryTime\", {\r\n        /**\r\n         * The maximum time to retry uploads in milliseconds.\r\n         */\r\n        get: function () {\r\n            return this._maxUploadRetryTime;\r\n        },\r\n        set: function (time) {\r\n            validateNumber('time', \r\n            /* minValue=*/ 0, \r\n            /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n            this._maxUploadRetryTime = time;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageImpl.prototype, \"maxOperationRetryTime\", {\r\n        /**\r\n         * The maximum time to retry operations other than uploads or downloads in\r\n         * milliseconds.\r\n         */\r\n        get: function () {\r\n            return this._maxOperationRetryTime;\r\n        },\r\n        set: function (time) {\r\n            validateNumber('time', \r\n            /* minValue=*/ 0, \r\n            /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n            this._maxOperationRetryTime = time;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    FirebaseStorageImpl.prototype._getAuthToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var auth, tokenData;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this._overrideAuthToken) {\r\n                            return [2 /*return*/, this._overrideAuthToken];\r\n                        }\r\n                        auth = this._authProvider.getImmediate({ optional: true });\r\n                        if (!auth) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, auth.getToken()];\r\n                    case 1:\r\n                        tokenData = _a.sent();\r\n                        if (tokenData !== null) {\r\n                            return [2 /*return*/, tokenData.accessToken];\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FirebaseStorageImpl.prototype._getAppCheckToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var appCheck, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        appCheck = this._appCheckProvider.getImmediate({ optional: true });\r\n                        if (!appCheck) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, appCheck.getToken()];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        // TODO: What do we want to do if there is an error getting the token?\r\n                        // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\r\n                        // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\r\n                        // the token (actual or dummy) to send requests.\r\n                        return [2 /*return*/, result.token];\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    FirebaseStorageImpl.prototype._delete = function () {\r\n        if (!this._deleted) {\r\n            this._deleted = true;\r\n            this._requests.forEach(function (request) { return request.cancel(); });\r\n            this._requests.clear();\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n     * at the given Location.\r\n     */\r\n    FirebaseStorageImpl.prototype._makeStorageReference = function (loc) {\r\n        return new Reference(this, loc);\r\n    };\r\n    /**\r\n     * @param requestInfo - HTTP RequestInfo object\r\n     * @param authToken - Firebase auth token\r\n     */\r\n    FirebaseStorageImpl.prototype._makeRequest = function (requestInfo, authToken, appCheckToken) {\r\n        var _this = this;\r\n        if (!this._deleted) {\r\n            var request_1 = makeRequest(requestInfo, this._appId, authToken, appCheckToken, this._pool, this._firebaseVersion);\r\n            this._requests.add(request_1);\r\n            // Request removes itself from set when complete.\r\n            request_1.getPromise().then(function () { return _this._requests.delete(request_1); }, function () { return _this._requests.delete(request_1); });\r\n            return request_1;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    FirebaseStorageImpl.prototype.makeRequestWithTokens = function (requestInfo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, authToken, appCheckToken;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this._getAuthToken(),\r\n                            this._getAppCheckToken()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), authToken = _a[0], appCheckToken = _a[1];\r\n                        return [2 /*return*/, this._makeRequest(requestInfo, authToken, appCheckToken)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return FirebaseStorageImpl;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable(ref, data, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return uploadBytesResumable$1(ref, data, metadata);\r\n}\r\n/**\r\n * A promise that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\r\nfunction getMetadata(ref) {\r\n    ref = getModularInstance(ref);\r\n    return getMetadata$1(ref);\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A promise that resolves with the new metadata for this object.\r\n */\r\nfunction updateMetadata(ref, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return updateMetadata$1(ref, metadata);\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list(ref, options) {\r\n    ref = getModularInstance(ref);\r\n    return list$1(ref, options);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll(ref) {\r\n    ref = getModularInstance(ref);\r\n    return listAll$1(ref);\r\n}\r\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A promise that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL(ref) {\r\n    ref = getModularInstance(ref);\r\n    return getDownloadURL$1(ref);\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A promise that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject(ref) {\r\n    ref = getModularInstance(ref);\r\n    return deleteObject$1(ref);\r\n}\r\nfunction ref(serviceOrRef, pathOrUrl) {\r\n    serviceOrRef = getModularInstance(serviceOrRef);\r\n    return ref$1(serviceOrRef, pathOrUrl);\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction _getChild(ref, childPath) {\r\n    return _getChild$1(ref, childPath);\r\n}\r\n/**\r\n * Modify this `StorageService` instance to communicate with the Cloud Storage emulator.\r\n *\r\n * @param storage - The `StorageService` instance\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 5001)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules.\r\n * @public\r\n */\r\nfunction connectStorageEmulator(storage, host, port, options) {\r\n    if (options === void 0) { options = {}; }\r\n    connectStorageEmulator$1(storage, host, port, options);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UploadTaskSnapshotCompat = /** @class */ (function () {\r\n    function UploadTaskSnapshotCompat(_delegate, task, ref) {\r\n        this._delegate = _delegate;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"bytesTransferred\", {\r\n        get: function () {\r\n            return this._delegate.bytesTransferred;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"metadata\", {\r\n        get: function () {\r\n            return this._delegate.metadata;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"state\", {\r\n        get: function () {\r\n            return this._delegate.state;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"totalBytes\", {\r\n        get: function () {\r\n            return this._delegate.totalBytes;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return UploadTaskSnapshotCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UploadTaskCompat = /** @class */ (function () {\r\n    function UploadTaskCompat(_delegate, _ref) {\r\n        this._delegate = _delegate;\r\n        this._ref = _ref;\r\n        this.cancel = this._delegate.cancel.bind(this._delegate);\r\n        this.catch = this._delegate.catch.bind(this._delegate);\r\n        this.pause = this._delegate.pause.bind(this._delegate);\r\n        this.resume = this._delegate.resume.bind(this._delegate);\r\n    }\r\n    Object.defineProperty(UploadTaskCompat.prototype, \"snapshot\", {\r\n        get: function () {\r\n            return new UploadTaskSnapshotCompat(this._delegate.snapshot, this, this._ref);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    UploadTaskCompat.prototype.then = function (onFulfilled, onRejected) {\r\n        var _this = this;\r\n        return this._delegate.then(function (snapshot) {\r\n            if (onFulfilled) {\r\n                return onFulfilled(new UploadTaskSnapshotCompat(snapshot, _this, _this._ref));\r\n            }\r\n        }, onRejected);\r\n    };\r\n    UploadTaskCompat.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        var _this = this;\r\n        var wrappedNextOrObserver = undefined;\r\n        if (!!nextOrObserver) {\r\n            if (typeof nextOrObserver === 'function') {\r\n                wrappedNextOrObserver = function (taskSnapshot) {\r\n                    return nextOrObserver(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\r\n                };\r\n            }\r\n            else {\r\n                wrappedNextOrObserver = {\r\n                    next: !!nextOrObserver.next\r\n                        ? function (taskSnapshot) {\r\n                            return nextOrObserver.next(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\r\n                        }\r\n                        : undefined,\r\n                    complete: nextOrObserver.complete || undefined,\r\n                    error: nextOrObserver.error || undefined\r\n                };\r\n            }\r\n        }\r\n        return this._delegate.on(type, wrappedNextOrObserver, error || undefined, completed || undefined);\r\n    };\r\n    return UploadTaskCompat;\r\n}());\n\nvar ListResultCompat = /** @class */ (function () {\r\n    function ListResultCompat(_delegate, _service) {\r\n        this._delegate = _delegate;\r\n        this._service = _service;\r\n    }\r\n    Object.defineProperty(ListResultCompat.prototype, \"prefixes\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this._delegate.prefixes.map(function (ref) { return new ReferenceCompat(ref, _this._service); });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListResultCompat.prototype, \"items\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this._delegate.items.map(function (ref) { return new ReferenceCompat(ref, _this._service); });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListResultCompat.prototype, \"nextPageToken\", {\r\n        get: function () {\r\n            return this._delegate.nextPageToken || null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ListResultCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *  http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ReferenceCompat = /** @class */ (function () {\r\n    function ReferenceCompat(_delegate, storage) {\r\n        this._delegate = _delegate;\r\n        this.storage = storage;\r\n    }\r\n    Object.defineProperty(ReferenceCompat.prototype, \"name\", {\r\n        get: function () {\r\n            return this._delegate.name;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this._delegate.bucket;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this._delegate.fullPath;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ReferenceCompat.prototype.toString = function () {\r\n        return this._delegate.toString();\r\n    };\r\n    /**\r\n     * @returns A reference to the object obtained by\r\n     * appending childPath, removing any duplicate, beginning, or trailing\r\n     * slashes.\r\n     */\r\n    ReferenceCompat.prototype.child = function (childPath) {\r\n        var reference = _getChild(this._delegate, childPath);\r\n        return new ReferenceCompat(reference, this.storage);\r\n    };\r\n    Object.defineProperty(ReferenceCompat.prototype, \"root\", {\r\n        get: function () {\r\n            return new ReferenceCompat(this._delegate.root, this.storage);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"parent\", {\r\n        /**\r\n         * @returns A reference to the parent of the\r\n         * current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var reference = this._delegate.parent;\r\n            if (reference == null) {\r\n                return null;\r\n            }\r\n            return new ReferenceCompat(reference, this.storage);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data - The blob to upload.\r\n     * @returns An UploadTask that lets you control and\r\n     * observe the upload.\r\n     */\r\n    ReferenceCompat.prototype.put = function (data, metadata) {\r\n        this._throwIfRoot('put');\r\n        return new UploadTaskCompat(uploadBytesResumable(this._delegate, data, metadata), this);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param value - The string to upload.\r\n     * @param format - The format of the string to upload.\r\n     * @returns An UploadTask that lets you control and\r\n     * observe the upload.\r\n     */\r\n    ReferenceCompat.prototype.putString = function (value, format, metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        this._throwIfRoot('putString');\r\n        var data = dataFromString(format, value);\r\n        var metadataClone = __assign({}, metadata);\r\n        if (metadataClone['contentType'] == null && data.contentType != null) {\r\n            metadataClone['contentType'] = data.contentType;\r\n        }\r\n        return new UploadTaskCompat(new UploadTask(this._delegate, new FbsBlob(data.data, true), metadataClone), this);\r\n    };\r\n    /**\r\n     * List all items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * This is a helper method for calling list() repeatedly until there are\r\n     * no more results. The default pagination size is 1000.\r\n     *\r\n     * Note: The results may not be consistent if objects are changed while this\r\n     * operation is running.\r\n     *\r\n     * Warning: listAll may potentially consume too many resources if there are\r\n     * too many results.\r\n     *\r\n     * @returns A Promise that resolves with all the items and prefixes under\r\n     *  the current storage reference. `prefixes` contains references to\r\n     *  sub-directories and `items` contains references to objects in this\r\n     *  folder. `nextPageToken` is never returned.\r\n     */\r\n    ReferenceCompat.prototype.listAll = function () {\r\n        var _this = this;\r\n        return listAll(this._delegate).then(function (r) { return new ListResultCompat(r, _this.storage); });\r\n    };\r\n    /**\r\n     * List items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * List API is only available for Firebase Rules Version 2.\r\n     *\r\n     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n     * delimited folder structure. Refer to GCS's List API if you want to learn more.\r\n     *\r\n     * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n     * support objects whose paths end with \"/\" or contain two consecutive\r\n     * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n     * list() may fail if there are too many unsupported objects in the bucket.\r\n     *\r\n     * @param options - See ListOptions for details.\r\n     * @returns A Promise that resolves with the items and prefixes.\r\n     * `prefixes` contains references to sub-folders and `items`\r\n     * contains references to objects in this folder. `nextPageToken`\r\n     * can be used to get the rest of the results.\r\n     */\r\n    ReferenceCompat.prototype.list = function (options) {\r\n        var _this = this;\r\n        return list(this._delegate, options || undefined).then(function (r) { return new ListResultCompat(r, _this.storage); });\r\n    };\r\n    /**\r\n     * A promise that resolves with the metadata for this object. If this\r\n     * object doesn't exist or metadata cannot be retreived, the promise is\r\n     * rejected.\r\n     */\r\n    ReferenceCompat.prototype.getMetadata = function () {\r\n        return getMetadata(this._delegate);\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata - The new metadata for the object.\r\n     * Only values that have been explicitly set will be changed. Explicitly\r\n     * setting a value to null will remove the metadata.\r\n     * @returns A promise that resolves\r\n     * with the new metadata for this object.\r\n     * @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    ReferenceCompat.prototype.updateMetadata = function (metadata) {\r\n        return updateMetadata(this._delegate, metadata);\r\n    };\r\n    /**\r\n     * @returns A promise that resolves with the download\r\n     * URL for this object.\r\n     */\r\n    ReferenceCompat.prototype.getDownloadURL = function () {\r\n        return getDownloadURL(this._delegate);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @returns A promise that resolves if the deletion succeeds.\r\n     */\r\n    ReferenceCompat.prototype.delete = function () {\r\n        this._throwIfRoot('delete');\r\n        return deleteObject(this._delegate);\r\n    };\r\n    ReferenceCompat.prototype._throwIfRoot = function (name) {\r\n        if (this._delegate._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return ReferenceCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n */\r\nvar StorageServiceCompat = /** @class */ (function () {\r\n    function StorageServiceCompat(app, _delegate) {\r\n        this.app = app;\r\n        this._delegate = _delegate;\r\n    }\r\n    Object.defineProperty(StorageServiceCompat.prototype, \"maxOperationRetryTime\", {\r\n        get: function () {\r\n            return this._delegate.maxOperationRetryTime;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StorageServiceCompat.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this._delegate.maxUploadRetryTime;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    StorageServiceCompat.prototype.ref = function (path) {\r\n        if (isUrl(path)) {\r\n            throw invalidArgument('ref() expected a child path but got a URL, use refFromURL instead.');\r\n        }\r\n        return new ReferenceCompat(ref(this._delegate, path), this);\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    StorageServiceCompat.prototype.refFromURL = function (url) {\r\n        if (!isUrl(url)) {\r\n            throw invalidArgument('refFromURL() expected a full URL but got a child path, use ref() instead.');\r\n        }\r\n        try {\r\n            Location.makeFromUrl(url, this._delegate.host);\r\n        }\r\n        catch (e) {\r\n            throw invalidArgument('refFromUrl() expected a valid full URL but got an invalid one.');\r\n        }\r\n        return new ReferenceCompat(ref(this._delegate, url), this);\r\n    };\r\n    StorageServiceCompat.prototype.setMaxUploadRetryTime = function (time) {\r\n        this._delegate.maxUploadRetryTime = time;\r\n    };\r\n    StorageServiceCompat.prototype.setMaxOperationRetryTime = function (time) {\r\n        this._delegate.maxOperationRetryTime = time;\r\n    };\r\n    StorageServiceCompat.prototype.useEmulator = function (host, port, options) {\r\n        if (options === void 0) { options = {}; }\r\n        connectStorageEmulator(this._delegate, host, port, options);\r\n    };\r\n    return StorageServiceCompat;\r\n}());\n\nvar name = \"@firebase/storage\";\nvar version = \"0.7.0\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(container, _a) {\r\n    var url = _a.instanceIdentifier;\r\n    // Dependencies\r\n    // TODO: This should eventually be 'app-compat'\r\n    var app = container.getProvider('app').getImmediate();\r\n    var authProvider = container.getProvider('auth-internal');\r\n    var appCheckProvider = container.getProvider('app-check-internal');\r\n    // TODO: get StorageService instance from component framework instead\r\n    // of creating a new one.\r\n    var storageServiceCompat = new StorageServiceCompat(app, new FirebaseStorageImpl(app, authProvider, appCheckProvider, new ConnectionPool(), url, firebase.SDK_VERSION));\r\n    return storageServiceCompat;\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: FirebaseStorageImpl,\r\n        Reference: ReferenceCompat\r\n    };\r\n    instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterStorage(firebase);\n\nexport { registerStorage };\n"]},"metadata":{},"sourceType":"module"}