{"ast":null,"code":"import firebase from '@firebase/app';\nimport { __extends, __awaiter, __generator } from 'tslib';\nimport { Component } from '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Standard error codes for different ways a request can fail, as defined by:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * This map is used primarily to convert from a backend error code string to\r\n * a client SDK error code string, and make sure it's in the supported set.\r\n */\n\nvar errorCodeMap = {\n  OK: 'ok',\n  CANCELLED: 'cancelled',\n  UNKNOWN: 'unknown',\n  INVALID_ARGUMENT: 'invalid-argument',\n  DEADLINE_EXCEEDED: 'deadline-exceeded',\n  NOT_FOUND: 'not-found',\n  ALREADY_EXISTS: 'already-exists',\n  PERMISSION_DENIED: 'permission-denied',\n  UNAUTHENTICATED: 'unauthenticated',\n  RESOURCE_EXHAUSTED: 'resource-exhausted',\n  FAILED_PRECONDITION: 'failed-precondition',\n  ABORTED: 'aborted',\n  OUT_OF_RANGE: 'out-of-range',\n  UNIMPLEMENTED: 'unimplemented',\n  INTERNAL: 'internal',\n  UNAVAILABLE: 'unavailable',\n  DATA_LOSS: 'data-loss'\n};\n/**\r\n * An explicit error that can be thrown from a handler to send an error to the\r\n * client that called the function.\r\n */\n\nvar HttpsErrorImpl = function (_super) {\n  __extends(HttpsErrorImpl, _super);\n\n  function HttpsErrorImpl(code, message, details) {\n    var _this = _super.call(this, message) || this; // This is a workaround for a bug in TypeScript when extending Error:\n    // tslint:disable-next-line\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\n\n    Object.setPrototypeOf(_this, HttpsErrorImpl.prototype);\n    _this.code = code;\n    _this.details = details;\n    return _this;\n  }\n\n  return HttpsErrorImpl;\n}(Error);\n/**\r\n * Takes an HTTP status code and returns the corresponding ErrorCode.\r\n * This is the standard HTTP status code -> error mapping defined in:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * @param status An HTTP status code.\r\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\r\n */\n\n\nfunction codeForHTTPStatus(status) {\n  // Make sure any successful status is OK.\n  if (status >= 200 && status < 300) {\n    return 'ok';\n  }\n\n  switch (status) {\n    case 0:\n      // This can happen if the server returns 500.\n      return 'internal';\n\n    case 400:\n      return 'invalid-argument';\n\n    case 401:\n      return 'unauthenticated';\n\n    case 403:\n      return 'permission-denied';\n\n    case 404:\n      return 'not-found';\n\n    case 409:\n      return 'aborted';\n\n    case 429:\n      return 'resource-exhausted';\n\n    case 499:\n      return 'cancelled';\n\n    case 500:\n      return 'internal';\n\n    case 501:\n      return 'unimplemented';\n\n    case 503:\n      return 'unavailable';\n\n    case 504:\n      return 'deadline-exceeded';\n  }\n\n  return 'unknown';\n}\n/**\r\n * Takes an HTTP response and returns the corresponding Error, if any.\r\n */\n\n\nfunction _errorForResponse(status, bodyJSON, serializer) {\n  var code = codeForHTTPStatus(status); // Start with reasonable defaults from the status code.\n\n  var description = code;\n  var details = undefined; // Then look through the body for explicit details.\n\n  try {\n    var errorJSON = bodyJSON && bodyJSON.error;\n\n    if (errorJSON) {\n      var status_1 = errorJSON.status;\n\n      if (typeof status_1 === 'string') {\n        if (!errorCodeMap[status_1]) {\n          // They must've included an unknown error code in the body.\n          return new HttpsErrorImpl('internal', 'internal');\n        }\n\n        code = errorCodeMap[status_1]; // TODO(klimt): Add better default descriptions for error enums.\n        // The default description needs to be updated for the new code.\n\n        description = status_1;\n      }\n\n      var message = errorJSON.message;\n\n      if (typeof message === 'string') {\n        description = message;\n      }\n\n      details = errorJSON.details;\n\n      if (details !== undefined) {\n        details = serializer.decode(details);\n      }\n    }\n  } catch (e) {// If we couldn't parse explicit error data, that's fine.\n  }\n\n  if (code === 'ok') {\n    // Technically, there's an edge case where a developer could explicitly\n    // return an error code of OK, and we will treat it as success, but that\n    // seems reasonable.\n    return null;\n  }\n\n  return new HttpsErrorImpl(code, description, details);\n}\n/**\r\n * Helper class to get metadata that should be included with a function call.\r\n */\n\n\nvar ContextProvider = function () {\n  function ContextProvider(authProvider, messagingProvider) {\n    var _this = this;\n\n    this.auth = null;\n    this.messaging = null;\n    this.auth = authProvider.getImmediate({\n      optional: true\n    });\n    this.messaging = messagingProvider.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth) {\n      authProvider.get().then(function (auth) {\n        return _this.auth = auth;\n      }, function () {\n        /* get() never rejects */\n      });\n    }\n\n    if (!this.messaging) {\n      messagingProvider.get().then(function (messaging) {\n        return _this.messaging = messaging;\n      }, function () {\n        /* get() never rejects */\n      });\n    }\n  }\n\n  ContextProvider.prototype.getAuthToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var token;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.auth) {\n              return [2\n              /*return*/\n              , undefined];\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.auth.getToken()];\n\n          case 2:\n            token = _a.sent();\n\n            if (!token) {\n              return [2\n              /*return*/\n              , undefined];\n            }\n\n            return [2\n            /*return*/\n            , token.accessToken];\n\n          case 3:\n            _a.sent(); // If there's any error when trying to get the auth token, leave it off.\n\n\n            return [2\n            /*return*/\n            , undefined];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  ContextProvider.prototype.getInstanceIdToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.messaging || !('Notification' in self) || Notification.permission !== 'granted') {\n              return [2\n              /*return*/\n              , undefined];\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.messaging.getToken()];\n\n          case 2:\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 3:\n            _a.sent(); // We don't warn on this, because it usually means messaging isn't set up.\n            // console.warn('Failed to retrieve instance id token.', e);\n            // If there's any error when trying to get the token, leave it off.\n\n\n            return [2\n            /*return*/\n            , undefined];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  ContextProvider.prototype.getContext = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var authToken, instanceIdToken;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getAuthToken()];\n\n          case 1:\n            authToken = _a.sent();\n            return [4\n            /*yield*/\n            , this.getInstanceIdToken()];\n\n          case 2:\n            instanceIdToken = _a.sent();\n            return [2\n            /*return*/\n            , {\n              authToken: authToken,\n              instanceIdToken: instanceIdToken\n            }];\n        }\n      });\n    });\n  };\n\n  return ContextProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\nvar UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\n\nfunction mapValues( // { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\no, f) {\n  var result = {};\n\n  for (var key in o) {\n    if (o.hasOwnProperty(key)) {\n      result[key] = f(o[key]);\n    }\n  }\n\n  return result;\n}\n\nvar Serializer = function () {\n  function Serializer() {} // Takes data and encodes it in a JSON-friendly way, such that types such as\n  // Date are preserved.\n\n\n  Serializer.prototype.encode = function (data) {\n    var _this = this;\n\n    if (data == null) {\n      return null;\n    }\n\n    if (data instanceof Number) {\n      data = data.valueOf();\n    }\n\n    if (typeof data === 'number' && isFinite(data)) {\n      // Any number in JS is safe to put directly in JSON and parse as a double\n      // without any loss of precision.\n      return data;\n    }\n\n    if (data === true || data === false) {\n      return data;\n    }\n\n    if (Object.prototype.toString.call(data) === '[object String]') {\n      return data;\n    }\n\n    if (data instanceof Date) {\n      return data.toISOString();\n    }\n\n    if (Array.isArray(data)) {\n      return data.map(function (x) {\n        return _this.encode(x);\n      });\n    }\n\n    if (typeof data === 'function' || typeof data === 'object') {\n      return mapValues(data, function (x) {\n        return _this.encode(x);\n      });\n    } // If we got this far, the data is not encodable.\n\n\n    throw new Error('Data cannot be encoded in JSON: ' + data);\n  }; // Takes data that's been encoded in a JSON-friendly form and returns a form\n  // with richer datatypes, such as Dates, etc.\n\n\n  Serializer.prototype.decode = function (json) {\n    var _this = this;\n\n    if (json == null) {\n      return json;\n    }\n\n    if (json['@type']) {\n      switch (json['@type']) {\n        case LONG_TYPE: // Fall through and handle this the same as unsigned.\n\n        case UNSIGNED_LONG_TYPE:\n          {\n            // Technically, this could work return a valid number for malformed\n            // data if there was a number followed by garbage. But it's just not\n            // worth all the extra code to detect that case.\n            var value = Number(json['value']);\n\n            if (isNaN(value)) {\n              throw new Error('Data cannot be decoded from JSON: ' + json);\n            }\n\n            return value;\n          }\n\n        default:\n          {\n            throw new Error('Data cannot be decoded from JSON: ' + json);\n          }\n      }\n    }\n\n    if (Array.isArray(json)) {\n      return json.map(function (x) {\n        return _this.decode(x);\n      });\n    }\n\n    if (typeof json === 'function' || typeof json === 'object') {\n      return mapValues(json, function (x) {\n        return _this.decode(x);\n      });\n    } // Anything else is safe to return.\n\n\n    return json;\n  };\n\n  return Serializer;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a Promise that will be rejected after the given duration.\r\n * The error will be of type HttpsErrorImpl.\r\n *\r\n * @param millis Number of milliseconds to wait before rejecting.\r\n */\n\n\nfunction failAfter(millis) {\n  var timer;\n  var promise = new Promise(function (_, reject) {\n    timer = setTimeout(function () {\n      reject(new HttpsErrorImpl('deadline-exceeded', 'deadline-exceeded'));\n    }, millis);\n  });\n  return {\n    timer: timer,\n    promise: promise\n  };\n}\n/**\r\n * The main class for the Firebase Functions SDK.\r\n */\n\n\nvar Service = function () {\n  /**\r\n   * Creates a new Functions service for the given app and (optional) region or custom domain.\r\n   * @param app_ The FirebaseApp to use.\r\n   * @param regionOrCustomDomain_ one of:\r\n   *   a) A region to call functions from, such as us-central1\r\n   *   b) A custom domain to use as a functions prefix, such as https://mydomain.com\r\n   */\n  function Service(app_, authProvider, messagingProvider, appCheckProvider, regionOrCustomDomain_, fetchImpl) {\n    var _this = this;\n\n    if (regionOrCustomDomain_ === void 0) {\n      regionOrCustomDomain_ = 'us-central1';\n    }\n\n    this.app_ = app_;\n    this.appCheckProvider = appCheckProvider;\n    this.fetchImpl = fetchImpl;\n    this.serializer = new Serializer();\n    this.emulatorOrigin = null;\n    this.INTERNAL = {\n      delete: function () {\n        return Promise.resolve(_this.deleteService());\n      }\n    };\n    this.contextProvider = new ContextProvider(authProvider, messagingProvider); // Cancels all ongoing requests when resolved.\n\n    this.cancelAllRequests = new Promise(function (resolve) {\n      _this.deleteService = function () {\n        return resolve();\n      };\n    }); // Resolve the region or custom domain overload by attempting to parse it.\n\n    try {\n      var url = new URL(regionOrCustomDomain_);\n      this.customDomain = url.origin;\n      this.region = 'us-central1';\n    } catch (e) {\n      this.customDomain = null;\n      this.region = regionOrCustomDomain_;\n    }\n  }\n\n  Object.defineProperty(Service.prototype, \"app\", {\n    get: function () {\n      return this.app_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the URL for a callable with the given name.\r\n   * @param name The name of the callable.\r\n   */\n\n  Service.prototype._url = function (name) {\n    var projectId = this.app_.options.projectId;\n\n    if (this.emulatorOrigin !== null) {\n      var origin_1 = this.emulatorOrigin;\n      return origin_1 + \"/\" + projectId + \"/\" + this.region + \"/\" + name;\n    }\n\n    if (this.customDomain !== null) {\n      return this.customDomain + \"/\" + name;\n    }\n\n    return \"https://\" + this.region + \"-\" + projectId + \".cloudfunctions.net/\" + name;\n  };\n  /**\r\n   * Modify this instance to communicate with the Cloud Functions emulator.\r\n   *\r\n   * Note: this must be called before this instance has been used to do any operations.\r\n   *\r\n   * @param host The emulator host (ex: localhost)\r\n   * @param port The emulator port (ex: 5001)\r\n   */\n\n\n  Service.prototype.useEmulator = function (host, port) {\n    this.emulatorOrigin = \"http://\" + host + \":\" + port;\n  };\n  /**\r\n   * Changes this instance to point to a Cloud Functions emulator running\r\n   * locally. See https://firebase.google.com/docs/functions/local-emulator\r\n   *\r\n   * @deprecated Prefer the useEmulator(host, port) method.\r\n   * @param origin The origin of the local emulator, such as\r\n   * \"http://localhost:5005\".\r\n   */\n\n\n  Service.prototype.useFunctionsEmulator = function (origin) {\n    this.emulatorOrigin = origin;\n  };\n  /**\r\n   * Returns a reference to the callable https trigger with the given name.\r\n   * @param name The name of the trigger.\r\n   */\n\n\n  Service.prototype.httpsCallable = function (name, options) {\n    var _this = this;\n\n    return function (data) {\n      return _this.call(name, data, options || {});\n    };\n  };\n  /**\r\n   * Does an HTTP POST and returns the completed response.\r\n   * @param url The url to post to.\r\n   * @param body The JSON body of the post.\r\n   * @param headers The HTTP headers to include in the request.\r\n   * @return A Promise that will succeed when the request finishes.\r\n   */\n\n\n  Service.prototype.postJSON = function (url, body, headers) {\n    return __awaiter(this, void 0, void 0, function () {\n      var appCheckToken, response, json;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            headers['Content-Type'] = 'application/json';\n            return [4\n            /*yield*/\n            , this.getAppCheckToken()];\n\n          case 1:\n            appCheckToken = _a.sent();\n\n            if (appCheckToken !== null) {\n              headers['X-Firebase-AppCheck'] = appCheckToken;\n            }\n\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , this.fetchImpl(url, {\n              method: 'POST',\n              body: JSON.stringify(body),\n              headers: headers\n            })];\n\n          case 3:\n            response = _a.sent();\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            _a.sent(); // This could be an unhandled error on the backend, or it could be a\n            // network error. There's no way to know, since an unhandled error on the\n            // backend will fail to set the proper CORS header, and thus will be\n            // treated as a network error by fetch.\n\n\n            return [2\n            /*return*/\n            , {\n              status: 0,\n              json: null\n            }];\n\n          case 5:\n            json = null;\n            _a.label = 6;\n\n          case 6:\n            _a.trys.push([6, 8,, 9]);\n\n            return [4\n            /*yield*/\n            , response.json()];\n\n          case 7:\n            json = _a.sent();\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 9];\n\n          case 9:\n            return [2\n            /*return*/\n            , {\n              status: response.status,\n              json: json\n            }];\n        }\n      });\n    });\n  };\n\n  Service.prototype.getAppCheckToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var appCheck, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            appCheck = this.appCheckProvider.getImmediate({\n              optional: true\n            });\n            if (!appCheck) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , appCheck.getToken()];\n\n          case 1:\n            result = _a.sent(); // If getToken() fails, it will still return a dummy token that also has\n            // an error field containing the error message. We will send any token\n            // provided here and show an error if/when it is rejected by the functions\n            // endpoint.\n\n            return [2\n            /*return*/\n            , result.token];\n\n          case 2:\n            return [2\n            /*return*/\n            , null];\n        }\n      });\n    });\n  };\n  /**\r\n   * Calls a callable function asynchronously and returns the result.\r\n   * @param name The name of the callable trigger.\r\n   * @param data The data to pass as params to the function.s\r\n   */\n\n\n  Service.prototype.call = function (name, data, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var url, body, headers, context, timeout, _a, timer, failAfterPromise, response, error, responseData, decodedData;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            url = this._url(name); // Encode any special types, such as dates, in the input data.\n\n            data = this.serializer.encode(data);\n            body = {\n              data: data\n            };\n            headers = {};\n            return [4\n            /*yield*/\n            , this.contextProvider.getContext()];\n\n          case 1:\n            context = _b.sent();\n\n            if (context.authToken) {\n              headers['Authorization'] = 'Bearer ' + context.authToken;\n            }\n\n            if (context.instanceIdToken) {\n              headers['Firebase-Instance-ID-Token'] = context.instanceIdToken;\n            }\n\n            timeout = options.timeout || 70000;\n            _a = failAfter(timeout), timer = _a.timer, failAfterPromise = _a.promise;\n            return [4\n            /*yield*/\n            , Promise.race([clearTimeoutWrapper(timer, this.postJSON(url, body, headers)), failAfterPromise, clearTimeoutWrapper(timer, this.cancelAllRequests)])];\n\n          case 2:\n            response = _b.sent(); // If service was deleted, interrupted response throws an error.\n\n            if (!response) {\n              throw new HttpsErrorImpl('cancelled', 'Firebase Functions instance was deleted.');\n            }\n\n            error = _errorForResponse(response.status, response.json, this.serializer);\n\n            if (error) {\n              throw error;\n            }\n\n            if (!response.json) {\n              throw new HttpsErrorImpl('internal', 'Response is not valid JSON object.');\n            }\n\n            responseData = response.json.data; // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\n            // backwards compatibility.\n\n            if (typeof responseData === 'undefined') {\n              responseData = response.json.result;\n            }\n\n            if (typeof responseData === 'undefined') {\n              // Consider the response malformed.\n              throw new HttpsErrorImpl('internal', 'Response is missing data field.');\n            }\n\n            decodedData = this.serializer.decode(responseData);\n            return [2\n            /*return*/\n            , {\n              data: decodedData\n            }];\n        }\n      });\n    });\n  };\n\n  return Service;\n}();\n\nfunction clearTimeoutWrapper(timer, promise) {\n  return __awaiter(this, void 0, void 0, function () {\n    var result;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , promise];\n\n        case 1:\n          result = _a.sent(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          clearTimeout(timer);\n          return [2\n          /*return*/\n          , result];\n      }\n    });\n  });\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Functions.\r\n */\n\n\nvar FUNCTIONS_TYPE = 'functions';\n\nfunction registerFunctions(instance, fetchImpl) {\n  var namespaceExports = {\n    // no-inline\n    Functions: Service\n  };\n\n  function factory(container, _a) {\n    var regionOrCustomDomain = _a.instanceIdentifier; // Dependencies\n\n    var app = container.getProvider('app').getImmediate();\n    var authProvider = container.getProvider('auth-internal');\n    var appCheckProvider = container.getProvider('app-check-internal');\n    var messagingProvider = container.getProvider('messaging'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    return new Service(app, authProvider, messagingProvider, appCheckProvider, regionOrCustomDomain, fetchImpl);\n  }\n\n  instance.INTERNAL.registerComponent(new Component(FUNCTIONS_TYPE, factory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps(namespaceExports).setMultipleInstances(true));\n}\n\nvar name = \"@firebase/functions\";\nvar version = \"0.6.15\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nregisterFunctions(firebase, fetch.bind(self));\nfirebase.registerVersion(name, version);","map":{"version":3,"sources":["/home/neve/Documentos/projetos/tcc/poket-web/node_modules/@firebase/functions/dist/index.esm.js"],"names":["firebase","__extends","__awaiter","__generator","Component","errorCodeMap","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","UNAUTHENTICATED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","HttpsErrorImpl","_super","code","message","details","_this","call","Object","setPrototypeOf","prototype","Error","codeForHTTPStatus","status","_errorForResponse","bodyJSON","serializer","description","undefined","errorJSON","error","status_1","decode","e","ContextProvider","authProvider","messagingProvider","auth","messaging","getImmediate","optional","get","then","getAuthToken","token","_a","label","trys","push","getToken","sent","accessToken","getInstanceIdToken","self","Notification","permission","getContext","authToken","instanceIdToken","LONG_TYPE","UNSIGNED_LONG_TYPE","mapValues","o","f","result","key","hasOwnProperty","Serializer","encode","data","Number","valueOf","isFinite","toString","Date","toISOString","Array","isArray","map","x","json","value","isNaN","failAfter","millis","timer","promise","Promise","_","reject","setTimeout","Service","app_","appCheckProvider","regionOrCustomDomain_","fetchImpl","emulatorOrigin","delete","resolve","deleteService","contextProvider","cancelAllRequests","url","URL","customDomain","origin","region","defineProperty","enumerable","configurable","_url","name","projectId","options","origin_1","useEmulator","host","port","useFunctionsEmulator","httpsCallable","postJSON","body","headers","appCheckToken","response","getAppCheckToken","method","JSON","stringify","appCheck","context","timeout","failAfterPromise","responseData","decodedData","_b","race","clearTimeoutWrapper","clearTimeout","FUNCTIONS_TYPE","registerFunctions","instance","namespaceExports","Functions","factory","container","regionOrCustomDomain","instanceIdentifier","app","getProvider","registerComponent","setServiceProps","setMultipleInstances","version","fetch","bind","registerVersion"],"mappings":"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","sourcesContent":["import firebase from '@firebase/app';\nimport { __extends, __awaiter, __generator } from 'tslib';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Standard error codes for different ways a request can fail, as defined by:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * This map is used primarily to convert from a backend error code string to\r\n * a client SDK error code string, and make sure it's in the supported set.\r\n */\r\nvar errorCodeMap = {\r\n    OK: 'ok',\r\n    CANCELLED: 'cancelled',\r\n    UNKNOWN: 'unknown',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    DEADLINE_EXCEEDED: 'deadline-exceeded',\r\n    NOT_FOUND: 'not-found',\r\n    ALREADY_EXISTS: 'already-exists',\r\n    PERMISSION_DENIED: 'permission-denied',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    RESOURCE_EXHAUSTED: 'resource-exhausted',\r\n    FAILED_PRECONDITION: 'failed-precondition',\r\n    ABORTED: 'aborted',\r\n    OUT_OF_RANGE: 'out-of-range',\r\n    UNIMPLEMENTED: 'unimplemented',\r\n    INTERNAL: 'internal',\r\n    UNAVAILABLE: 'unavailable',\r\n    DATA_LOSS: 'data-loss'\r\n};\r\n/**\r\n * An explicit error that can be thrown from a handler to send an error to the\r\n * client that called the function.\r\n */\r\nvar HttpsErrorImpl = /** @class */ (function (_super) {\r\n    __extends(HttpsErrorImpl, _super);\r\n    function HttpsErrorImpl(code, message, details) {\r\n        var _this = _super.call(this, message) || this;\r\n        // This is a workaround for a bug in TypeScript when extending Error:\r\n        // tslint:disable-next-line\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(_this, HttpsErrorImpl.prototype);\r\n        _this.code = code;\r\n        _this.details = details;\r\n        return _this;\r\n    }\r\n    return HttpsErrorImpl;\r\n}(Error));\r\n/**\r\n * Takes an HTTP status code and returns the corresponding ErrorCode.\r\n * This is the standard HTTP status code -> error mapping defined in:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * @param status An HTTP status code.\r\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\r\n */\r\nfunction codeForHTTPStatus(status) {\r\n    // Make sure any successful status is OK.\r\n    if (status >= 200 && status < 300) {\r\n        return 'ok';\r\n    }\r\n    switch (status) {\r\n        case 0:\r\n            // This can happen if the server returns 500.\r\n            return 'internal';\r\n        case 400:\r\n            return 'invalid-argument';\r\n        case 401:\r\n            return 'unauthenticated';\r\n        case 403:\r\n            return 'permission-denied';\r\n        case 404:\r\n            return 'not-found';\r\n        case 409:\r\n            return 'aborted';\r\n        case 429:\r\n            return 'resource-exhausted';\r\n        case 499:\r\n            return 'cancelled';\r\n        case 500:\r\n            return 'internal';\r\n        case 501:\r\n            return 'unimplemented';\r\n        case 503:\r\n            return 'unavailable';\r\n        case 504:\r\n            return 'deadline-exceeded';\r\n    }\r\n    return 'unknown';\r\n}\r\n/**\r\n * Takes an HTTP response and returns the corresponding Error, if any.\r\n */\r\nfunction _errorForResponse(status, bodyJSON, serializer) {\r\n    var code = codeForHTTPStatus(status);\r\n    // Start with reasonable defaults from the status code.\r\n    var description = code;\r\n    var details = undefined;\r\n    // Then look through the body for explicit details.\r\n    try {\r\n        var errorJSON = bodyJSON && bodyJSON.error;\r\n        if (errorJSON) {\r\n            var status_1 = errorJSON.status;\r\n            if (typeof status_1 === 'string') {\r\n                if (!errorCodeMap[status_1]) {\r\n                    // They must've included an unknown error code in the body.\r\n                    return new HttpsErrorImpl('internal', 'internal');\r\n                }\r\n                code = errorCodeMap[status_1];\r\n                // TODO(klimt): Add better default descriptions for error enums.\r\n                // The default description needs to be updated for the new code.\r\n                description = status_1;\r\n            }\r\n            var message = errorJSON.message;\r\n            if (typeof message === 'string') {\r\n                description = message;\r\n            }\r\n            details = errorJSON.details;\r\n            if (details !== undefined) {\r\n                details = serializer.decode(details);\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // If we couldn't parse explicit error data, that's fine.\r\n    }\r\n    if (code === 'ok') {\r\n        // Technically, there's an edge case where a developer could explicitly\r\n        // return an error code of OK, and we will treat it as success, but that\r\n        // seems reasonable.\r\n        return null;\r\n    }\r\n    return new HttpsErrorImpl(code, description, details);\r\n}\n\n/**\r\n * Helper class to get metadata that should be included with a function call.\r\n */\r\nvar ContextProvider = /** @class */ (function () {\r\n    function ContextProvider(authProvider, messagingProvider) {\r\n        var _this = this;\r\n        this.auth = null;\r\n        this.messaging = null;\r\n        this.auth = authProvider.getImmediate({ optional: true });\r\n        this.messaging = messagingProvider.getImmediate({\r\n            optional: true\r\n        });\r\n        if (!this.auth) {\r\n            authProvider.get().then(function (auth) { return (_this.auth = auth); }, function () {\r\n                /* get() never rejects */\r\n            });\r\n        }\r\n        if (!this.messaging) {\r\n            messagingProvider.get().then(function (messaging) { return (_this.messaging = messaging); }, function () {\r\n                /* get() never rejects */\r\n            });\r\n        }\r\n    }\r\n    ContextProvider.prototype.getAuthToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.auth) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.auth.getToken()];\r\n                    case 2:\r\n                        token = _a.sent();\r\n                        if (!token) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        return [2 /*return*/, token.accessToken];\r\n                    case 3:\r\n                        _a.sent();\r\n                        // If there's any error when trying to get the auth token, leave it off.\r\n                        return [2 /*return*/, undefined];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getInstanceIdToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.messaging ||\r\n                            !('Notification' in self) ||\r\n                            Notification.permission !== 'granted') {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.messaging.getToken()];\r\n                    case 2: return [2 /*return*/, _a.sent()];\r\n                    case 3:\r\n                        _a.sent();\r\n                        // We don't warn on this, because it usually means messaging isn't set up.\r\n                        // console.warn('Failed to retrieve instance id token.', e);\r\n                        // If there's any error when trying to get the token, leave it off.\r\n                        return [2 /*return*/, undefined];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getContext = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authToken, instanceIdToken;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getAuthToken()];\r\n                    case 1:\r\n                        authToken = _a.sent();\r\n                        return [4 /*yield*/, this.getInstanceIdToken()];\r\n                    case 2:\r\n                        instanceIdToken = _a.sent();\r\n                        return [2 /*return*/, { authToken: authToken, instanceIdToken: instanceIdToken }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return ContextProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\r\nvar UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\r\nfunction mapValues(\r\n// { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\no, f) {\r\n    var result = {};\r\n    for (var key in o) {\r\n        if (o.hasOwnProperty(key)) {\r\n            result[key] = f(o[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer() {\r\n    }\r\n    // Takes data and encodes it in a JSON-friendly way, such that types such as\r\n    // Date are preserved.\r\n    Serializer.prototype.encode = function (data) {\r\n        var _this = this;\r\n        if (data == null) {\r\n            return null;\r\n        }\r\n        if (data instanceof Number) {\r\n            data = data.valueOf();\r\n        }\r\n        if (typeof data === 'number' && isFinite(data)) {\r\n            // Any number in JS is safe to put directly in JSON and parse as a double\r\n            // without any loss of precision.\r\n            return data;\r\n        }\r\n        if (data === true || data === false) {\r\n            return data;\r\n        }\r\n        if (Object.prototype.toString.call(data) === '[object String]') {\r\n            return data;\r\n        }\r\n        if (data instanceof Date) {\r\n            return data.toISOString();\r\n        }\r\n        if (Array.isArray(data)) {\r\n            return data.map(function (x) { return _this.encode(x); });\r\n        }\r\n        if (typeof data === 'function' || typeof data === 'object') {\r\n            return mapValues(data, function (x) { return _this.encode(x); });\r\n        }\r\n        // If we got this far, the data is not encodable.\r\n        throw new Error('Data cannot be encoded in JSON: ' + data);\r\n    };\r\n    // Takes data that's been encoded in a JSON-friendly form and returns a form\r\n    // with richer datatypes, such as Dates, etc.\r\n    Serializer.prototype.decode = function (json) {\r\n        var _this = this;\r\n        if (json == null) {\r\n            return json;\r\n        }\r\n        if (json['@type']) {\r\n            switch (json['@type']) {\r\n                case LONG_TYPE:\r\n                // Fall through and handle this the same as unsigned.\r\n                case UNSIGNED_LONG_TYPE: {\r\n                    // Technically, this could work return a valid number for malformed\r\n                    // data if there was a number followed by garbage. But it's just not\r\n                    // worth all the extra code to detect that case.\r\n                    var value = Number(json['value']);\r\n                    if (isNaN(value)) {\r\n                        throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                    }\r\n                    return value;\r\n                }\r\n                default: {\r\n                    throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                }\r\n            }\r\n        }\r\n        if (Array.isArray(json)) {\r\n            return json.map(function (x) { return _this.decode(x); });\r\n        }\r\n        if (typeof json === 'function' || typeof json === 'object') {\r\n            return mapValues(json, function (x) { return _this.decode(x); });\r\n        }\r\n        // Anything else is safe to return.\r\n        return json;\r\n    };\r\n    return Serializer;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a Promise that will be rejected after the given duration.\r\n * The error will be of type HttpsErrorImpl.\r\n *\r\n * @param millis Number of milliseconds to wait before rejecting.\r\n */\r\nfunction failAfter(millis) {\r\n    var timer;\r\n    var promise = new Promise(function (_, reject) {\r\n        timer = setTimeout(function () {\r\n            reject(new HttpsErrorImpl('deadline-exceeded', 'deadline-exceeded'));\r\n        }, millis);\r\n    });\r\n    return {\r\n        timer: timer,\r\n        promise: promise\r\n    };\r\n}\r\n/**\r\n * The main class for the Firebase Functions SDK.\r\n */\r\nvar Service = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Functions service for the given app and (optional) region or custom domain.\r\n     * @param app_ The FirebaseApp to use.\r\n     * @param regionOrCustomDomain_ one of:\r\n     *   a) A region to call functions from, such as us-central1\r\n     *   b) A custom domain to use as a functions prefix, such as https://mydomain.com\r\n     */\r\n    function Service(app_, authProvider, messagingProvider, appCheckProvider, regionOrCustomDomain_, fetchImpl) {\r\n        var _this = this;\r\n        if (regionOrCustomDomain_ === void 0) { regionOrCustomDomain_ = 'us-central1'; }\r\n        this.app_ = app_;\r\n        this.appCheckProvider = appCheckProvider;\r\n        this.fetchImpl = fetchImpl;\r\n        this.serializer = new Serializer();\r\n        this.emulatorOrigin = null;\r\n        this.INTERNAL = {\r\n            delete: function () {\r\n                return Promise.resolve(_this.deleteService());\r\n            }\r\n        };\r\n        this.contextProvider = new ContextProvider(authProvider, messagingProvider);\r\n        // Cancels all ongoing requests when resolved.\r\n        this.cancelAllRequests = new Promise(function (resolve) {\r\n            _this.deleteService = function () {\r\n                return resolve();\r\n            };\r\n        });\r\n        // Resolve the region or custom domain overload by attempting to parse it.\r\n        try {\r\n            var url = new URL(regionOrCustomDomain_);\r\n            this.customDomain = url.origin;\r\n            this.region = 'us-central1';\r\n        }\r\n        catch (e) {\r\n            this.customDomain = null;\r\n            this.region = regionOrCustomDomain_;\r\n        }\r\n    }\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the URL for a callable with the given name.\r\n     * @param name The name of the callable.\r\n     */\r\n    Service.prototype._url = function (name) {\r\n        var projectId = this.app_.options.projectId;\r\n        if (this.emulatorOrigin !== null) {\r\n            var origin_1 = this.emulatorOrigin;\r\n            return origin_1 + \"/\" + projectId + \"/\" + this.region + \"/\" + name;\r\n        }\r\n        if (this.customDomain !== null) {\r\n            return this.customDomain + \"/\" + name;\r\n        }\r\n        return \"https://\" + this.region + \"-\" + projectId + \".cloudfunctions.net/\" + name;\r\n    };\r\n    /**\r\n     * Modify this instance to communicate with the Cloud Functions emulator.\r\n     *\r\n     * Note: this must be called before this instance has been used to do any operations.\r\n     *\r\n     * @param host The emulator host (ex: localhost)\r\n     * @param port The emulator port (ex: 5001)\r\n     */\r\n    Service.prototype.useEmulator = function (host, port) {\r\n        this.emulatorOrigin = \"http://\" + host + \":\" + port;\r\n    };\r\n    /**\r\n     * Changes this instance to point to a Cloud Functions emulator running\r\n     * locally. See https://firebase.google.com/docs/functions/local-emulator\r\n     *\r\n     * @deprecated Prefer the useEmulator(host, port) method.\r\n     * @param origin The origin of the local emulator, such as\r\n     * \"http://localhost:5005\".\r\n     */\r\n    Service.prototype.useFunctionsEmulator = function (origin) {\r\n        this.emulatorOrigin = origin;\r\n    };\r\n    /**\r\n     * Returns a reference to the callable https trigger with the given name.\r\n     * @param name The name of the trigger.\r\n     */\r\n    Service.prototype.httpsCallable = function (name, options) {\r\n        var _this = this;\r\n        return function (data) {\r\n            return _this.call(name, data, options || {});\r\n        };\r\n    };\r\n    /**\r\n     * Does an HTTP POST and returns the completed response.\r\n     * @param url The url to post to.\r\n     * @param body The JSON body of the post.\r\n     * @param headers The HTTP headers to include in the request.\r\n     * @return A Promise that will succeed when the request finishes.\r\n     */\r\n    Service.prototype.postJSON = function (url, body, headers) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var appCheckToken, response, json;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        headers['Content-Type'] = 'application/json';\r\n                        return [4 /*yield*/, this.getAppCheckToken()];\r\n                    case 1:\r\n                        appCheckToken = _a.sent();\r\n                        if (appCheckToken !== null) {\r\n                            headers['X-Firebase-AppCheck'] = appCheckToken;\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, this.fetchImpl(url, {\r\n                                method: 'POST',\r\n                                body: JSON.stringify(body),\r\n                                headers: headers\r\n                            })];\r\n                    case 3:\r\n                        response = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        _a.sent();\r\n                        // This could be an unhandled error on the backend, or it could be a\r\n                        // network error. There's no way to know, since an unhandled error on the\r\n                        // backend will fail to set the proper CORS header, and thus will be\r\n                        // treated as a network error by fetch.\r\n                        return [2 /*return*/, {\r\n                                status: 0,\r\n                                json: null\r\n                            }];\r\n                    case 5:\r\n                        json = null;\r\n                        _a.label = 6;\r\n                    case 6:\r\n                        _a.trys.push([6, 8, , 9]);\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 7:\r\n                        json = _a.sent();\r\n                        return [3 /*break*/, 9];\r\n                    case 8:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 9];\r\n                    case 9: return [2 /*return*/, {\r\n                            status: response.status,\r\n                            json: json\r\n                        }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Service.prototype.getAppCheckToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var appCheck, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        appCheck = this.appCheckProvider.getImmediate({ optional: true });\r\n                        if (!appCheck) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, appCheck.getToken()];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        // If getToken() fails, it will still return a dummy token that also has\r\n                        // an error field containing the error message. We will send any token\r\n                        // provided here and show an error if/when it is rejected by the functions\r\n                        // endpoint.\r\n                        return [2 /*return*/, result.token];\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Calls a callable function asynchronously and returns the result.\r\n     * @param name The name of the callable trigger.\r\n     * @param data The data to pass as params to the function.s\r\n     */\r\n    Service.prototype.call = function (name, data, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, body, headers, context, timeout, _a, timer, failAfterPromise, response, error, responseData, decodedData;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        url = this._url(name);\r\n                        // Encode any special types, such as dates, in the input data.\r\n                        data = this.serializer.encode(data);\r\n                        body = { data: data };\r\n                        headers = {};\r\n                        return [4 /*yield*/, this.contextProvider.getContext()];\r\n                    case 1:\r\n                        context = _b.sent();\r\n                        if (context.authToken) {\r\n                            headers['Authorization'] = 'Bearer ' + context.authToken;\r\n                        }\r\n                        if (context.instanceIdToken) {\r\n                            headers['Firebase-Instance-ID-Token'] = context.instanceIdToken;\r\n                        }\r\n                        timeout = options.timeout || 70000;\r\n                        _a = failAfter(timeout), timer = _a.timer, failAfterPromise = _a.promise;\r\n                        return [4 /*yield*/, Promise.race([\r\n                                clearTimeoutWrapper(timer, this.postJSON(url, body, headers)),\r\n                                failAfterPromise,\r\n                                clearTimeoutWrapper(timer, this.cancelAllRequests)\r\n                            ])];\r\n                    case 2:\r\n                        response = _b.sent();\r\n                        // If service was deleted, interrupted response throws an error.\r\n                        if (!response) {\r\n                            throw new HttpsErrorImpl('cancelled', 'Firebase Functions instance was deleted.');\r\n                        }\r\n                        error = _errorForResponse(response.status, response.json, this.serializer);\r\n                        if (error) {\r\n                            throw error;\r\n                        }\r\n                        if (!response.json) {\r\n                            throw new HttpsErrorImpl('internal', 'Response is not valid JSON object.');\r\n                        }\r\n                        responseData = response.json.data;\r\n                        // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\r\n                        // backwards compatibility.\r\n                        if (typeof responseData === 'undefined') {\r\n                            responseData = response.json.result;\r\n                        }\r\n                        if (typeof responseData === 'undefined') {\r\n                            // Consider the response malformed.\r\n                            throw new HttpsErrorImpl('internal', 'Response is missing data field.');\r\n                        }\r\n                        decodedData = this.serializer.decode(responseData);\r\n                        return [2 /*return*/, { data: decodedData }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Service;\r\n}());\r\nfunction clearTimeoutWrapper(timer, promise) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var result;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, promise];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    clearTimeout(timer);\r\n                    return [2 /*return*/, result];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Functions.\r\n */\r\nvar FUNCTIONS_TYPE = 'functions';\r\nfunction registerFunctions(instance, fetchImpl) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        Functions: Service\r\n    };\r\n    function factory(container, _a) {\r\n        var regionOrCustomDomain = _a.instanceIdentifier;\r\n        // Dependencies\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        var appCheckProvider = container.getProvider('app-check-internal');\r\n        var messagingProvider = container.getProvider('messaging');\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return new Service(app, authProvider, messagingProvider, appCheckProvider, regionOrCustomDomain, fetchImpl);\r\n    }\r\n    instance.INTERNAL.registerComponent(new Component(FUNCTIONS_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n}\n\nvar name = \"@firebase/functions\";\nvar version = \"0.6.15\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterFunctions(firebase, fetch.bind(self));\r\nfirebase.registerVersion(name, version);\n"]},"metadata":{},"sourceType":"module"}